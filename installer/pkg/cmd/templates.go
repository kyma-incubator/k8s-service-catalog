// Code generated by go-bindata.
// sources:
// templates/sc/api-registration.yaml.tmpl
// templates/sc/apiserver-deployment.yaml.tmpl
// templates/sc/ca_config.json
// templates/sc/ca_csr.json.tmpl
// templates/sc/controller-manager-deployment.yaml.tmpl
// templates/sc/etcd-cluster-with-backup.yaml.tmpl
// templates/sc/etcd-operator-deployment.yaml.tmpl
// templates/sc/etcd-operator-rbac-binding.yaml.tmpl
// templates/sc/etcd-operator-rbac.yaml.tmpl
// templates/sc/etcd-operator-service-account.yaml.tmpl
// templates/sc/etcd-svc.yaml.tmpl
// templates/sc/etcd.yaml.tmpl
// templates/sc/gencert_config.json.tmpl
// templates/sc/namespace.yaml.tmpl
// templates/sc/rbac.yaml.tmpl
// templates/sc/service-accounts.yaml.tmpl
// templates/sc/service.yaml.tmpl
// templates/sc/tls-cert-secret.yaml.tmpl
// templates/gcp/gcp-broker.yaml.tmpl
// templates/gcp/google-oauth-deployment.yaml.tmpl
// templates/gcp/google-oauth-rbac.yaml.tmpl
// templates/gcp/google-oauth-service-account.yaml.tmpl
// templates/gcp/namespace.yaml.tmpl
// templates/gcp/service-account-secret.yaml.tmpl
// templates/gcp-deprecated/google-oauth-deployment.yaml.tmpl
// templates/gcp-deprecated/service-account-secret.yaml.tmpl
// DO NOT EDIT!

package cmd

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesScApiRegistrationYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x41\x6f\xe3\xb6\x13\xc5\xef\xfa\x14\x0f\xf1\xe5\xff\x07\x1c\xd9\xc9\xa5\x85\x7a\x72\xbc\x69\x2b\x24\xb5\x8d\xc8\xe9\x22\xa7\xc5\x98\x1a\xcb\x83\x50\x24\x4b\x52\xf6\x0a\x8b\xfd\xee\x05\x65\x39\xdd\x60\xdb\x53\xab\xe3\xcc\x9b\x99\x1f\xdf\x8c\x26\xff\xfa\xcb\x26\x58\x5a\xd7\x7b\x69\x0e\x11\xb7\xf3\x9b\x1f\xf0\x8b\xb5\x8d\x66\x94\x46\xe5\x59\x4a\x3f\x8a\x62\x13\xb8\x46\x67\x6a\xf6\x88\x07\xc6\xc2\x91\x3a\xf0\x25\x33\xc5\xef\xec\x83\x58\x83\xdb\x7c\x8e\xff\x25\xc1\xd5\x98\xba\xfa\xff\x4f\xd9\x04\xbd\xed\xd0\x52\x0f\x63\x23\xba\xc0\x88\x07\x09\xd8\x8b\x66\xf0\x67\xc5\x2e\x42\x0c\x94\x6d\x9d\x16\x32\x8a\x71\x92\x78\x18\xc6\x8c\x4d\xf2\x6c\x82\x97\xb1\x85\xdd\x45\x12\x03\x82\xb2\xae\x87\xdd\x7f\xab\x03\xc5\x01\x38\x7d\x87\x18\x5d\x28\x66\xb3\xd3\xe9\x94\xd3\x40\x9b\x5b\xdf\xcc\xf4\x59\x19\x66\x8f\xe5\xf2\x7e\x55\xdd\x5f\xdf\xe6\xf3\xa1\xe6\xd9\x68\x0e\x01\x9e\xff\xe8\xc4\x73\x8d\x5d\x0f\x72\x4e\x8b\xa2\x9d\x66\x68\x3a\xc1\x7a\x50\xe3\x99\x6b\x44\x9b\x80\x4f\x5e\xa2\x98\x66\x8a\x60\xf7\xf1\x44\x9e\xb3\x09\x6a\x09\xd1\xcb\xae\x8b\xef\xdc\xba\xe0\x49\x78\x27\xb0\x06\x64\x70\xb5\xa8\x50\x56\x57\xb8\x5b\x54\x65\x35\xcd\x26\xf8\x58\x6e\x7f\x5d\x3f\x6f\xf1\x71\xf1\xf4\xb4\x58\x6d\xcb\xfb\x0a\xeb\x27\x2c\xd7\xab\x0f\xe5\xb6\x5c\xaf\x2a\xac\x7f\xc6\x62\xf5\x82\x87\x72\xf5\x61\x0a\x96\x78\x60\x0f\xfe\xec\x7c\xe2\xb7\x1e\x92\x7c\xe4\x3a\x99\x56\x31\xbf\x03\xd8\xdb\x33\x50\x70\xac\x64\x2f\x0a\x9a\x4c\xd3\x51\xc3\x68\xec\x91\xbd\x11\xd3\xc0\xb1\x6f\x25\xa4\x6d\x06\x90\xa9\xb3\x09\xb4\xb4\x12\x29\x0e\x91\xef\x1e\x75\x3e\x91\x6d\xba\x89\x4d\x99\x9c\xf1\xdc\x48\x88\xec\x53\x71\xc2\xb2\xe1\x9b\x85\xb6\x24\x66\x46\x4d\xe3\xb9\xa1\x64\x41\xaa\x09\xec\x8f\xec\x13\xae\xa2\xbb\xce\xd4\x9a\xd1\x76\x21\x62\xc7\x20\x44\x6e\x9d\x1e\xa4\x47\xf2\x92\x76\x31\x1d\x1a\x8b\x09\xec\x53\xb8\xee\x0d\xb5\xa2\x48\xeb\xfe\x8c\xb2\x5c\x7c\xda\x3c\xdf\x3d\x96\xcb\x4f\x0f\xf7\x2f\x05\x94\x16\x36\x11\x8a\x7d\x4c\x2f\xa6\xc8\xa0\x2e\x1e\xac\x97\xd8\xc3\x75\x3b\x2d\x0a\xaf\xdc\xa7\xb3\x4c\x6f\x4d\x0e\xb5\x5d\xec\x48\x63\xfb\x58\x9d\xc1\x13\xf4\x14\xff\x44\x9d\xfd\x07\xbf\x20\x39\x19\xff\xa0\x02\xe4\xe4\x6c\xa1\x1f\x2c\xcf\x5f\x7f\x0c\xb9\xd8\xd9\xf1\x66\xc7\x91\x6e\xb2\x57\x31\x75\x91\x08\x2a\xf6\x47\x51\x9c\xb5\x1c\xa9\xa6\x48\x45\x06\x18\x6a\xb9\xc0\x28\xcd\xc3\x59\xa1\x28\x92\xb6\xcd\xd8\x28\x4b\xbb\x4f\xda\xc6\xdb\xce\x15\xf8\x7b\x11\x70\xbc\xf0\x5c\x06\x03\xce\xcb\x60\x5b\x81\xdb\xf9\xfc\xd2\x61\x33\x06\x7f\x13\x23\x6d\xd7\x0e\xb9\xf9\x5f\xf5\x9b\xb7\x9a\x9b\x14\x1d\xa7\xa5\xf9\x17\xda\x31\x74\x3d\x12\x5c\x93\x93\xb7\x6c\x70\xa4\xbe\x97\x64\x78\xbb\x94\x02\x5f\xbe\x20\x5f\x2e\x36\xc3\x22\x1f\xb8\xc7\xd7\xaf\xd9\x9f\x01\x00\x00\xff\xff\xc8\x63\x1a\x0e\x14\x05\x00\x00")

func templatesScApiRegistrationYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesScApiRegistrationYamlTmpl,
		"templates/sc/api-registration.yaml.tmpl",
	)
}

func templatesScApiRegistrationYamlTmpl() (*asset, error) {
	bytes, err := templatesScApiRegistrationYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sc/api-registration.yaml.tmpl", size: 1300, mode: os.FileMode(420), modTime: time.Unix(1542788448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesScApiserverDeploymentYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x54\x41\x6f\xdb\x46\x13\xbd\xf3\x57\x0c\xa4\xcb\xf7\x01\xa6\x24\xcb\x41\xd3\xb2\x27\xd5\x4e\x13\x21\x8e\x24\x44\x4a\x83\x1c\x57\xcb\x11\x39\xf0\x72\x97\x9d\x1d\x4a\x66\x83\xfc\xf7\x62\x49\x49\x26\x6d\x27\x6d\x91\x43\xbb\x07\xc3\x98\x37\xfb\xf4\xe6\xf1\xed\x0c\xbf\xfb\x44\x43\xb8\x76\x65\xcd\x94\xe5\x02\xd3\xc9\xe5\x4b\x78\xed\x5c\x66\x10\xe6\x56\x8f\xa2\x00\xdf\x92\x46\xeb\x31\x85\xca\xa6\xc8\x20\x39\xc2\xac\x54\x3a\xc7\x13\x72\x01\xbf\x21\x7b\x72\x16\xa6\xa3\x09\xfc\x2f\x34\x0c\x8e\xd0\xe0\xff\x3f\x47\x43\xa8\x5d\x05\x85\xaa\xc1\x3a\x81\xca\x23\x48\x4e\x1e\x76\x64\x10\xf0\x5e\x63\x29\x40\x16\xb4\x2b\x4a\x43\xca\x6a\x84\x03\x49\xde\xfc\xcc\x91\x64\x14\x0d\xe1\xd3\x91\xc2\x6d\x45\x91\x05\x05\xda\x95\x35\xb8\x5d\xb7\x0f\x94\x34\x82\xc3\xc9\x45\x4a\x9f\x8c\xc7\x87\xc3\x61\xa4\x1a\xb5\x23\xc7\xd9\xd8\xb4\x9d\x7e\x7c\x3b\xbf\x7e\xb5\x58\xbf\x8a\xa7\xa3\x49\x73\xe7\x83\x35\xe8\x3d\x30\xfe\x5e\x11\x63\x0a\xdb\x1a\x54\x59\x1a\xd2\x6a\x6b\x10\x8c\x3a\x80\x63\x50\x19\x23\xa6\x20\x2e\x08\x3e\x30\x09\xd9\xec\x02\xbc\xdb\xc9\x41\x31\x46\x43\x48\xc9\x0b\xd3\xb6\x92\x9e\x5b\x27\x79\xe4\x7b\x0d\xce\x82\xb2\x30\x98\xad\x61\xbe\x1e\xc0\x2f\xb3\xf5\x7c\x7d\x11\x0d\xe1\xe3\x7c\xf3\x66\xf9\x61\x03\x1f\x67\xef\xdf\xcf\x16\x9b\xf9\xab\x35\x2c\xdf\xc3\xf5\x72\x71\x33\xdf\xcc\x97\x8b\x35\x2c\x7f\x85\xd9\xe2\x13\xbc\x9d\x2f\x6e\x2e\x00\x49\x72\x64\xc0\xfb\x92\x83\x7e\xc7\x40\xc1\x47\x4c\x83\x69\x6b\xc4\x9e\x80\x9d\x6b\x05\xf9\x12\x35\xed\x48\x83\x51\x36\xab\x54\x86\x90\xb9\x3d\xb2\x25\x9b\x41\x89\x5c\x90\x0f\x5f\xd3\x83\xb2\x69\x34\x04\x43\x05\x89\x92\xa6\xf2\x64\xa8\x36\x22\x37\x58\x1a\x57\x17\x68\xa5\xf9\x0d\x8f\xbc\x27\x8d\xa0\x95\x28\xe3\x32\x50\x25\x35\x35\xe4\x11\x6c\x0e\x0e\xb6\x64\x15\x13\x7a\x50\x8c\xc0\x95\x05\xb2\xd1\xb0\x4d\x45\x7a\x66\x4a\x9e\xa3\x69\x59\x82\x30\x40\xd1\xe9\x28\xfc\x0d\xbe\x72\x15\x18\x9a\xe0\xa8\x30\x82\x27\x2f\x41\xcd\xde\x99\xaa\x68\x45\x7e\xff\x4b\xb9\x23\x9b\x26\x9d\x59\x23\x55\xd2\x31\xf9\x09\xe0\xbd\xa0\x6d\x6c\x1b\xef\x2f\xb7\x28\xea\x32\x2a\x50\x54\xaa\x44\x25\x11\x80\x55\x05\x26\x0f\x13\x1c\x2b\xbe\x54\x1a\xcf\x83\xc6\xc7\x41\x23\x00\xa3\xb6\x68\x7c\xb8\x08\x21\x87\x4f\x5a\xe2\x07\xa6\xf0\x31\x43\x23\x63\x13\x57\x9f\xc0\x65\x04\xe0\xd1\xa0\x16\xc7\x2d\x45\xa1\x44\xe7\xb7\x1d\xce\xbf\x64\x05\x10\x2c\x4a\xa3\x04\x8f\x0c\x9d\x59\xc2\x31\x3d\xb2\xbf\x41\x07\x70\x12\xda\xfc\xdf\x76\xce\xb4\x76\x95\x95\x45\x63\xce\xe0\xdc\x3e\x38\x76\x69\x67\xc3\x6b\x47\x3e\xff\x50\xfc\x8c\x91\xed\xa1\x42\x65\x98\xc0\xe7\xcf\x30\x5a\xb7\xe4\xd7\xad\x8a\x79\x00\xe0\xcb\x97\x7e\xe7\xaa\x32\x66\xe5\x0c\xe9\x3a\x81\xf9\x6e\xe1\x64\xc5\xe8\xc3\x37\x3d\x75\x31\x7a\x57\xb1\xc6\xce\x8c\xd0\xac\x07\xf4\xd2\xab\x01\xe8\xb2\x4a\xe0\x72\x32\x29\x7a\xd5\x02\x0b\xc7\x75\x02\xd3\xc9\x3b\xea\x00\xcd\x6b\xfa\x47\x04\x57\x5d\x02\xc5\x59\xe7\x72\xfc\x8c\x11\x31\xc4\xb1\x4a\x8f\x6f\x38\x0e\x16\xb2\x33\x1d\x74\xf0\xb6\xda\x22\x5b\x14\xf4\x8b\x53\x04\x6f\x69\x87\xba\xd6\x06\x07\x3d\x1a\x8f\xba\x62\x8c\x4b\xc7\xd2\x25\xf8\xf1\xc5\x8b\xab\x47\x8d\xe2\x58\x65\x18\x4b\x5d\x62\x07\x08\x4f\xb4\xd7\x17\x0a\x71\xab\xd7\x77\x80\xb0\xac\x93\xf1\xb8\x41\xb5\xa9\xbc\x20\xc7\xda\x50\x58\x02\xd3\xab\x97\x3f\x75\x29\xf6\x5d\x21\x3f\x3c\xa8\x08\x1a\x7b\xc6\x9c\xb3\xb3\x72\x2c\x09\x04\xcd\x67\xb4\xdd\x0a\xef\x42\xf4\x7a\x77\x1e\x65\x2b\xd6\xd8\x19\x1c\xa0\x08\x17\x56\x4a\xf2\x04\xc6\x7b\xc5\x63\xae\xec\xf8\xee\x6c\x66\xfc\xf4\x15\x9f\x0e\xa3\x4a\x97\xd6\xd4\x09\x08\x57\x18\x75\xcb\x64\xd1\xfb\x15\xbb\x2d\x76\x23\x11\x0c\x79\x8d\xd2\x4f\x49\xf9\x74\x90\xa6\xdc\x0a\xca\x51\x19\xc9\xff\xe8\x41\x5e\xe7\x18\x26\x7a\xb3\xd9\xac\xd6\x1d\x64\xa7\xc8\x54\x8c\x9b\x9c\xd1\xe7\xce\xa4\xed\xca\x38\x1d\xb2\x24\xa4\xcc\x0d\x1a\x55\xaf\x51\x3b\x9b\x86\x9d\x32\xe9\x74\x94\xc8\xe4\xd2\xe7\x31\x5f\x69\x8d\xde\x7f\x85\x5b\xa8\x40\x57\xc9\xf9\xea\xf4\x8c\x19\xda\xe3\x7f\xc3\x8b\xab\x7f\xd9\x8b\x36\x9d\x5f\x5f\x79\xfd\x58\x7a\xd4\xdc\x77\xa7\xad\x2c\xbe\x9d\x65\x12\x2c\x7a\x5b\x28\x86\x3b\x0c\x01\x35\x7e\xa4\x7b\x9d\x27\x57\xcf\x54\x8f\xf0\xce\xc5\x3b\xac\xbf\x79\x31\xe0\xd1\x9f\x01\x00\x00\xff\xff\xba\x8a\x0f\x08\xb3\x0a\x00\x00")

func templatesScApiserverDeploymentYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesScApiserverDeploymentYamlTmpl,
		"templates/sc/apiserver-deployment.yaml.tmpl",
	)
}

func templatesScApiserverDeploymentYamlTmpl() (*asset, error) {
	bytes, err := templatesScApiserverDeploymentYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sc/apiserver-deployment.yaml.tmpl", size: 2739, mode: os.FileMode(420), modTime: time.Unix(1542788448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesScCa_configJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xcc\xb1\x0a\xc2\x30\x18\x04\xe0\x3d\x4f\x71\xdc\xdc\xa1\xa0\x83\xe4\x55\xc4\xa1\xe8\x99\x06\x35\x94\xff\x6f\xc5\x52\xfa\xee\x92\x80\x38\xdc\xf2\x1d\x77\x5b\x00\xe8\x39\x95\x5c\x12\x23\x36\x04\x00\xe0\x4d\xf7\x61\x79\xce\x55\x1a\x00\xd4\x67\xca\xb6\x32\x82\xc7\xc3\xa9\xef\x47\x76\xbf\x66\xf1\x21\xc9\x19\x71\xfe\x5f\x75\xe0\x43\x2b\x54\xae\x79\x1a\x65\x2f\x95\xb9\x9a\xcb\xde\x32\xe2\xd2\xb6\x7b\xa8\xd9\xc3\x37\x00\x00\xff\xff\x80\xfc\xeb\xe4\x85\x00\x00\x00")

func templatesScCa_configJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesScCa_configJson,
		"templates/sc/ca_config.json",
	)
}

func templatesScCa_configJson() (*asset, error) {
	bytes, err := templatesScCa_configJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sc/ca_config.json", size: 133, mode: os.FileMode(420), modTime: time.Unix(1542788448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesScCa_csrJsonTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x0a\xc2\x30\x10\xc6\xf1\xf9\xee\x29\x8e\x6f\x2e\xa2\xc5\x41\xb2\x76\x71\x10\x1c\x6a\xe9\x20\x1d\x22\x44\xad\xad\x0d\x34\x75\xd0\x90\x77\x97\x2b\xa5\xe3\xef\xcf\x7d\x17\x99\xf0\xf4\x61\x0a\x30\x72\x15\xc4\x28\x9b\xa3\x0f\xd3\x4e\x52\x42\xb6\x32\x57\x4a\x93\x31\xa1\x73\x5f\x18\x89\x4c\x04\xdb\x3f\x3c\x8c\x60\x0c\x16\x99\x86\xd0\xfe\x1c\x8c\xe4\xdb\xfd\x81\x29\xe9\xf5\x60\xdf\x6e\x7e\xcd\x44\xba\x21\x14\xba\xa8\xca\x79\x40\x38\xa9\x82\x1d\xe4\xe5\x83\x5b\xda\x59\x5b\xf7\xb9\xad\xae\x34\xd4\x75\xbd\xb8\xbc\xa8\x0b\xdb\xb7\x77\x3f\x0e\xad\x05\x13\x25\xa6\x86\x13\xff\x03\x00\x00\xff\xff\x8a\x02\x37\x24\xce\x00\x00\x00")

func templatesScCa_csrJsonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesScCa_csrJsonTmpl,
		"templates/sc/ca_csr.json.tmpl",
	)
}

func templatesScCa_csrJsonTmpl() (*asset, error) {
	bytes, err := templatesScCa_csrJsonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sc/ca_csr.json.tmpl", size: 206, mode: os.FileMode(420), modTime: time.Unix(1542788448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesScControllerManagerDeploymentYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\x41\x8f\xd3\x48\x13\xbd\xe7\x57\x94\x92\xcb\xf7\x49\xe3\x24\x33\x3b\x68\x91\x57\x1c\xc2\xcc\x00\x11\x90\x44\xe3\xb0\x88\xd3\xaa\xd3\xae\xd8\xa5\x69\x77\x7b\xab\xcb\x09\x5e\xc4\x7f\x5f\xb5\x9d\x04\x9b\xb0\x23\x10\x87\xdd\x3e\x45\xf5\xaa\x5e\xbf\x2a\xbf\xae\x8c\x7e\xfa\x0c\x46\x70\xe3\xca\x9a\x29\xcb\x05\xae\xa6\x97\xbf\xc2\x4b\xe7\x32\x83\x30\xb7\x7a\x3c\x08\xf0\x1b\xd2\x68\x3d\xa6\x50\xd9\x14\x19\x24\x47\x98\x95\x4a\xe7\x78\x44\x2e\xe0\x77\x64\x4f\xce\xc2\xd5\x78\x0a\xff\x0b\x09\xc3\x03\x34\xfc\xff\x6f\x83\x11\xd4\xae\x82\x42\xd5\x60\x9d\x40\xe5\x11\x24\x27\x0f\x5b\x32\x08\xf8\x51\x63\x29\x40\x16\xb4\x2b\x4a\x43\xca\x6a\x84\x3d\x49\xde\x5c\x73\x20\x19\x0f\x46\xf0\xe1\x40\xe1\x36\xa2\xc8\x82\x02\xed\xca\x1a\xdc\xb6\x9b\x07\x4a\x1a\xc1\xe1\xe4\x22\xa5\x8f\x27\x93\xfd\x7e\x3f\x56\x8d\xda\xb1\xe3\x6c\x62\xda\x4c\x3f\x79\x33\xbf\xb9\x5b\x24\x77\xd1\xd5\x78\xda\xd4\xbc\xb3\x06\xbd\x07\xc6\x3f\x2b\x62\x4c\x61\x53\x83\x2a\x4b\x43\x5a\x6d\x0c\x82\x51\x7b\x70\x0c\x2a\x63\xc4\x14\xc4\x05\xc1\x7b\x26\x21\x9b\x5d\x80\x77\x5b\xd9\x2b\xc6\xc1\x08\x52\xf2\xc2\xb4\xa9\xa4\x37\xad\xa3\x3c\xf2\xbd\x04\x67\x41\x59\x18\xce\x12\x98\x27\x43\x78\x3e\x4b\xe6\xc9\xc5\x60\x04\xef\xe7\xeb\x57\xcb\x77\x6b\x78\x3f\xbb\xbf\x9f\x2d\xd6\xf3\xbb\x04\x96\xf7\x70\xb3\x5c\xdc\xce\xd7\xf3\xe5\x22\x81\xe5\x0b\x98\x2d\x3e\xc0\xeb\xf9\xe2\xf6\x02\x90\x24\x47\x06\xfc\x58\x72\xd0\xef\x18\x28\xcc\x11\xd3\x30\xb4\x04\xb1\x27\x60\xeb\x5a\x41\xbe\x44\x4d\x5b\xd2\x60\x94\xcd\x2a\x95\x21\x64\x6e\x87\x6c\xc9\x66\x50\x22\x17\xe4\xc3\xd7\xf4\xa0\x6c\x3a\x18\x81\xa1\x82\x44\x49\x13\x39\x6b\xaa\xb5\xc8\x2d\x96\xc6\xd5\x05\x5a\x69\xee\xf0\xc8\x3b\xd2\x08\x5a\x89\x32\x2e\x03\xed\xac\xb0\x33\x06\x19\x0a\x65\x55\x86\xdc\x94\xfd\xbc\x77\x1f\xc8\xa6\x71\xe7\xf6\x81\x2a\xe9\xe0\xc5\x18\xf0\xa3\xa0\x6d\x1a\x99\xec\x2e\x37\x28\xea\x72\x50\xa0\xa8\x54\x89\x8a\x07\x00\x56\x15\x18\x77\xa4\x45\x07\x69\x07\xc8\x97\x4a\x63\x7c\x6c\x25\x3a\xb4\x32\x00\x30\x6a\x83\xc6\x07\x06\x08\x16\x39\x4b\x89\xbe\x41\x19\x06\x1e\x2a\x18\x1b\x4b\xf9\x18\x2e\x07\x00\x1e\x0d\x6a\x71\xdc\x72\x15\x4a\x74\xfe\xa6\x43\xfe\xfd\xf4\x00\x82\x45\x69\x94\xe0\x81\xaa\xd3\x66\x38\xa6\xc7\xfa\x23\xbc\x00\x47\xe9\xcd\xef\xb6\x64\xa6\xb5\xab\xac\x2c\x9a\x01\x0e\xcf\xeb\x86\x87\xf4\x80\x28\xb2\xc8\xa7\xab\xa3\xc7\xa6\xde\x1e\x2a\x54\x86\x31\x7c\xfa\x04\xe3\xa4\xbd\xee\xa6\x15\x38\x0f\x00\x7c\xfe\xdc\xcf\x5c\x55\xc6\xac\x9c\x21\x5d\xc7\x30\xdf\x2e\x9c\xac\x18\x7d\x70\xc2\x31\x8b\xd1\xbb\x8a\x35\x76\xda\x87\xe6\x99\xa3\x97\x5e\x0c\x40\x97\x55\x0c\x97\xd3\x69\xd1\x8b\x16\x58\x38\xae\x63\xb8\x9a\xbe\xa5\x0e\xd0\xbc\x8a\x1f\x22\x78\xd2\x25\x40\xbb\xfb\x52\x7b\x1c\xcb\xeb\xa7\xc9\x1f\x8b\xd9\xdb\xbb\x64\x35\xbb\xb9\xeb\x70\xec\x94\xa9\xf0\x05\xbb\xa2\x7f\xdd\x96\xd0\xa4\xf7\xb8\xed\x47\x0f\xf1\x95\x92\x3c\x3e\x39\x61\x7c\xb2\xf4\x17\x13\x70\xe6\xbb\x12\x1e\xf9\x26\x11\x44\x91\x47\x5d\x31\x46\xa5\x63\xe9\xc4\x87\x4f\xaf\xaf\xaf\x87\xdd\x40\x14\x19\x54\x29\x72\xd4\x98\xfb\xd9\x56\x19\x8f\xdd\x84\x68\xd7\xcd\xbe\x9c\xf6\xb0\x88\xd1\xd7\x56\x47\x64\x05\x79\xa7\x4c\x07\x7b\x52\xf4\x12\x37\xec\x1e\x90\x23\x46\x43\x5e\xbe\x95\x7f\x75\x9d\xf7\x0a\xb6\xa8\x24\x34\x90\x29\x41\xdf\x41\x96\x4c\x19\x59\x15\x56\xf9\x3c\x45\x2b\x24\xf5\x33\xe1\x0a\xbf\xab\x78\x16\xd4\x3e\x27\x9b\x92\xcd\x96\x25\x72\xbb\x25\xfb\xf5\x61\x62\x67\x83\x6e\x9e\xc5\xca\xb1\xc4\x10\x26\x78\x42\x77\xce\x54\x05\xbe\x0d\xcf\xcb\x9f\xfb\xe3\xec\xc9\x62\xe7\x63\x00\x14\xa1\xac\xfd\xee\x93\x9d\xe2\x09\x57\x76\xf2\x50\x6d\x90\x2d\x0a\xfa\xe8\x7c\x95\x1d\x0f\xa3\x4a\x97\xd6\xd4\x31\xf4\x94\x87\x30\x59\xf4\x7e\xc5\x6e\x83\x5d\x97\x85\x7f\xd7\x97\x28\x7d\xe3\x95\xe7\xed\x34\xe1\x56\x50\x8e\xca\x48\xfe\x57\x0f\xf2\x3a\xc7\xd0\xd7\xab\xf5\x7a\x95\x74\x90\xad\x22\x53\x31\xae\x73\x46\x9f\x3b\x93\xb6\xeb\xf2\x78\xc8\x92\x90\x32\xb7\x68\x54\x9d\xa0\x76\x36\x0d\xfb\x74\xda\xc9\x28\x91\xc9\xa5\xdf\xc6\x7c\xa5\x35\x7a\xff\x0f\xdc\x42\x05\xba\x4a\x4e\xa5\x57\x27\xcc\xd0\x0e\xff\x1b\xb3\xf8\xe5\x5f\x9e\x45\xeb\xd1\xb3\x9d\xfe\xa8\x39\x3d\x6a\xee\xcf\xa8\x8d\xb4\xff\x21\xaa\xa4\x50\x8d\xfc\xb5\xa3\x49\xb0\xe8\xed\xd8\x08\x1e\x30\xd8\xd4\xf8\xb1\xee\x65\x1e\x67\x7b\xa2\xfa\x0a\xef\x14\x3e\x60\xfd\x68\x61\xc0\xff\x0e\x00\x00\xff\xff\x49\x54\xdb\x52\x58\x0b\x00\x00")

func templatesScControllerManagerDeploymentYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesScControllerManagerDeploymentYamlTmpl,
		"templates/sc/controller-manager-deployment.yaml.tmpl",
	)
}

func templatesScControllerManagerDeploymentYamlTmpl() (*asset, error) {
	bytes, err := templatesScControllerManagerDeploymentYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sc/controller-manager-deployment.yaml.tmpl", size: 2904, mode: os.FileMode(420), modTime: time.Unix(1542788448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesScEtcdClusterWithBackupYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x90\xcd\x8e\xda\x40\x10\x84\xef\x7e\x8a\x8a\x73\x0d\x0e\x3f\x89\x14\xf9\x08\xca\x81\x43\xa4\x48\x44\xdc\x9b\x71\x07\x46\xd8\xd3\xa3\xe9\xb6\xb5\x0b\xe2\xdd\x57\x63\x7b\x77\xb9\x76\x55\x7d\x53\x35\x14\xfd\x91\x93\x7a\x09\x35\x4a\x36\xd7\x54\x0d\x19\x9d\x48\xb9\x72\x92\x58\xb4\x72\xd2\x7d\x1f\x56\x27\x36\x5a\x97\xc5\xd5\x87\xa6\x46\xf9\xdb\x5c\xb3\x6b\x7b\x35\x4e\x65\xd1\xb1\x51\x0e\xd5\x05\x10\xa8\xe3\x19\xb4\x70\xef\x86\xe9\xac\x91\x5c\xd6\x94\xd3\xe0\x1d\x2f\x1c\x19\xb5\x72\x2e\x0b\x8d\xec\x72\x56\xfd\x8d\x6b\xdc\xef\xa8\x9e\xf0\x07\x7f\x63\x3c\x1e\x05\x30\x7c\xd4\xdc\x54\xab\xea\x57\xc6\x9e\xc8\x5d\xfb\x98\xb3\xc0\x57\xe8\x45\x92\x41\x03\x45\xbd\x88\xc1\x07\xe3\x34\x50\x8b\xff\x92\x60\xac\xe6\xc3\xf9\x1b\x1a\x41\x10\x43\xaf\x0c\xbb\x78\x85\x0f\x88\x49\x9a\xde\x99\x97\xf0\x65\x24\x4d\xd4\xfd\x1c\xdf\x87\x03\x3b\xc9\xab\x37\xcb\x25\x46\x43\x47\x2f\xdb\xd1\xa3\x35\x7e\x8e\x17\x35\x49\x74\xe6\x7f\xaf\x31\x2f\xfc\x9b\x9b\xaa\x71\xb0\xa3\xb4\x7d\xc7\xe5\xe8\x89\xc3\x54\x14\x18\xc6\x6b\x5e\xb6\x0f\x7f\xb6\x35\x56\xcb\xf5\x8f\x59\x9a\x41\xbb\x96\x54\x3f\xff\x62\x7a\xed\xf0\xa4\xe5\x2f\x79\x0b\x00\x00\xff\xff\x29\xb2\xaf\x3a\xbb\x01\x00\x00")

func templatesScEtcdClusterWithBackupYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesScEtcdClusterWithBackupYamlTmpl,
		"templates/sc/etcd-cluster-with-backup.yaml.tmpl",
	)
}

func templatesScEtcdClusterWithBackupYamlTmpl() (*asset, error) {
	bytes, err := templatesScEtcdClusterWithBackupYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sc/etcd-cluster-with-backup.yaml.tmpl", size: 443, mode: os.FileMode(420), modTime: time.Unix(1542788448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesScEtcdOperatorDeploymentYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\xcf\x4e\xf3\x30\x10\xc4\xef\x7e\x8a\x7d\x81\xa6\x5f\x2e\xdf\xc1\xb7\x8a\x96\x5b\x4b\x04\x12\x12\xa7\x6a\xeb\x4c\x8b\x85\xff\x61\x6f\x22\xfa\xf6\x28\xd0\x84\xf6\x10\x4e\xec\x69\x3d\xde\x99\x9f\xe5\xe5\x64\x9f\x91\x8b\x8d\x41\x13\x3e\x04\x61\x68\xcb\xb2\xaf\x0f\x10\xae\xd5\x9b\x0d\xad\xa6\x35\x92\x8b\x67\x8f\x20\xca\x43\xb8\x65\x61\xad\x88\x02\x7b\x68\x82\x98\x76\x11\x13\x32\x4b\xcc\x17\xb5\x24\x36\xd0\x54\x90\x7b\x6b\xb0\x30\x2c\xec\xe2\x49\x95\x04\x33\x18\x33\x92\xb3\x86\x8b\xa6\x5a\x11\x09\x7c\x72\x2c\x18\x6e\x88\xae\x01\x43\x39\x3e\xc0\x95\xf1\x34\x07\x25\x1a\xb3\xbf\xfa\x6f\xee\xca\x98\xd8\x05\xd9\xcd\x38\x88\x4c\x0c\xc2\x36\x20\x4f\xf9\x8b\xd9\xfc\xa1\xac\xe7\x13\x34\xbd\x77\x7c\xae\x6c\x5c\x9a\x98\x11\xcb\xf2\x66\x56\xf7\xff\xaa\xff\x55\x3d\x59\x10\xfa\x9f\xb7\x8f\xe9\xdb\x97\x7d\xf3\xb0\xde\xef\x56\xdb\xcd\x53\xb3\xba\xdb\x4c\x03\x44\x3d\xbb\x0e\xf7\x39\x7a\x7d\x25\x12\x1d\x2d\x5c\xfb\x88\xe3\xad\x7a\xd1\x1b\x96\x57\x3d\x7d\x5c\x35\x2d\xe0\x37\xee\xdf\x23\xd5\x67\x00\x00\x00\xff\xff\xdd\x5d\x0f\xb6\x4b\x02\x00\x00")

func templatesScEtcdOperatorDeploymentYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesScEtcdOperatorDeploymentYamlTmpl,
		"templates/sc/etcd-operator-deployment.yaml.tmpl",
	)
}

func templatesScEtcdOperatorDeploymentYamlTmpl() (*asset, error) {
	bytes, err := templatesScEtcdOperatorDeploymentYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sc/etcd-operator-deployment.yaml.tmpl", size: 587, mode: os.FileMode(420), modTime: time.Unix(1542788448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesScEtcdOperatorRbacBindingYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xcd\x31\x4e\xc5\x30\x0c\xc6\xf1\x3d\xa7\xf0\x05\x5a\xd4\x0d\x65\x03\x06\xf6\x22\xb1\xbb\x8e\x29\xa6\x69\x1c\x39\x4e\x07\x4e\x8f\x50\xdf\xf6\xd4\xb7\xda\xfa\x7d\x7f\xac\xf2\xc9\xd6\x44\x4b\x04\x5b\x90\x46\xec\xfe\xad\x26\xbf\xe8\xa2\x65\xdc\x9e\xdb\x28\xfa\x74\x4c\x0b\x3b\x4e\x61\x93\x92\x22\xbc\xe5\xde\x9c\x6d\xd6\xcc\xaf\x52\x92\x94\x35\xec\xec\x98\xd0\x31\x06\x80\x82\x3b\x47\x60\xa7\x34\x68\x65\x43\x57\x0b\xa6\x99\x67\xfe\xfa\x7f\x63\x95\x77\xd3\x5e\x1f\xf4\x02\xc0\x5d\xe9\x62\xb8\xf5\xe5\x87\xc9\x5b\x0c\xc3\xcd\x7c\xb0\x1d\x42\xfc\x42\xa4\xbd\xf8\x05\x3b\xaf\xad\x22\x71\x84\x76\x8a\x81\xd0\x31\xeb\x1a\xfe\x02\x00\x00\xff\xff\x98\x26\x1f\x98\x14\x01\x00\x00")

func templatesScEtcdOperatorRbacBindingYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesScEtcdOperatorRbacBindingYamlTmpl,
		"templates/sc/etcd-operator-rbac-binding.yaml.tmpl",
	)
}

func templatesScEtcdOperatorRbacBindingYamlTmpl() (*asset, error) {
	bytes, err := templatesScEtcdOperatorRbacBindingYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sc/etcd-operator-rbac-binding.yaml.tmpl", size: 276, mode: os.FileMode(420), modTime: time.Unix(1542788448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesScEtcdOperatorRbacYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xb1\x4e\xed\x30\x0c\x86\xf7\x3c\x45\x74\xc6\x2b\x9d\x5e\x9d\xed\xaa\xeb\x1d\xd8\x19\xd8\xdd\xe4\x07\xac\xd3\xc4\x91\xed\x54\xc0\xd3\xa3\xd2\x22\x21\x15\x74\x18\x6d\x7f\xf9\xfe\x38\xa1\xc6\x0f\x50\x63\xa9\x63\xd4\x89\xd2\x40\xdd\x9f\x45\xf9\x8d\x9c\xa5\x0e\xd7\x7f\x36\xb0\xfc\x5d\x2e\x13\x9c\x2e\xe1\xca\x35\x8f\xf1\xff\xdc\xcd\xa1\xf7\x32\x23\x14\x38\x65\x72\x1a\x43\x8c\x95\x0a\xc6\x08\x4f\xf9\x2c\x0d\x4a\x2e\x1a\xb4\xcf\xb0\x31\x9c\x23\x35\xbe\x53\xe9\xcd\x56\xf2\xfc\x41\x0d\xeb\xc1\x89\x0c\x43\x12\x85\xd8\x90\xa4\x84\x18\x15\x26\x5d\x13\xbe\x90\x69\x4b\xb4\x10\xe3\x02\x9d\xf6\xc9\xe9\xcf\xe9\x28\xa6\xc6\x78\x71\xd4\x75\x25\xdb\xef\x7f\x94\xa6\x6e\x2e\xe5\xb3\x99\xf1\xc8\x95\xd7\x85\x7f\x93\x60\x2e\x4a\x4f\xf8\xd1\xbd\xcf\xd3\x4c\x66\xb8\x21\x8c\x5b\xf7\x74\xb4\x34\xc9\xb6\xe9\xa0\x0b\x27\x6c\x05\x6a\x6e\xc2\xd5\xb7\xaa\xad\x3f\x67\x8e\xea\x8b\xcc\xbd\xac\x91\x5c\x76\x70\xc1\x46\xdd\x7e\xaf\x66\xc7\xf4\x8c\x36\xcb\x6b\xf9\xde\xf1\x1e\x00\x00\xff\xff\x6f\xf0\x8e\x6c\x34\x02\x00\x00")

func templatesScEtcdOperatorRbacYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesScEtcdOperatorRbacYamlTmpl,
		"templates/sc/etcd-operator-rbac.yaml.tmpl",
	)
}

func templatesScEtcdOperatorRbacYamlTmpl() (*asset, error) {
	bytes, err := templatesScEtcdOperatorRbacYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sc/etcd-operator-rbac.yaml.tmpl", size: 564, mode: os.FileMode(420), modTime: time.Unix(1542788448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesScEtcdOperatorServiceAccountYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\xb1\x0d\x02\x31\x0c\x05\xd0\x3e\x53\x78\x81\x2b\x68\xdd\x31\x03\x12\xfd\x97\xf3\x85\x22\x38\x3b\x72\x4c\xe6\xa7\xe0\xda\x27\x3d\xcc\xf1\x64\xae\x11\xae\xb2\x6f\xed\x3d\xbc\xab\x3c\x98\x7b\x18\xef\x66\xf1\xf5\x6a\x27\x0b\x1d\x05\x6d\x22\x8e\x93\x2a\x2c\xeb\x47\x4c\x26\x2a\xf2\xd2\x35\x61\x54\x59\xff\x7b\x18\x0a\x9f\x78\xb5\x5f\x00\x00\x00\xff\xff\xec\x17\x5b\x98\x61\x00\x00\x00")

func templatesScEtcdOperatorServiceAccountYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesScEtcdOperatorServiceAccountYamlTmpl,
		"templates/sc/etcd-operator-service-account.yaml.tmpl",
	)
}

func templatesScEtcdOperatorServiceAccountYamlTmpl() (*asset, error) {
	bytes, err := templatesScEtcdOperatorServiceAccountYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sc/etcd-operator-service-account.yaml.tmpl", size: 97, mode: os.FileMode(420), modTime: time.Unix(1542788448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesScEtcdSvcYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x52\x4d\x6f\xdb\x48\x0c\xbd\xeb\x57\x3c\x58\x97\x5d\xc0\x1f\x89\xf7\x10\xac\x7a\x72\x93\xb4\x15\x1a\xd8\x45\xe4\x34\xc8\x91\x1e\xd1\x12\xd1\xf1\xcc\x74\x86\xb6\xe2\x7f\x5f\x48\x76\xd0\xa4\x3d\x86\xa7\x19\xbe\x47\xf2\xf1\x23\x7f\xb7\x65\x39\xae\x7d\x38\x46\x69\x5a\xc5\xfc\xe2\xf2\x0a\x9f\xbd\x6f\x2c\xa3\x74\x66\x9a\xf5\xf0\x9d\x18\x76\x89\x6b\xec\x5d\xcd\x11\xda\x32\x16\x81\x4c\xcb\x2f\xc8\x18\xdf\x39\x26\xf1\x0e\xf3\xe9\x05\xfe\xe9\x09\xa3\x33\x34\xfa\xf7\x43\x96\xe3\xe8\xf7\xd8\xd1\x11\xce\x2b\xf6\x89\xa1\xad\x24\x6c\xc5\x32\xf8\xd9\x70\x50\x88\x83\xf1\xbb\x60\x85\x9c\x61\x74\xa2\xed\x50\xe6\x9c\x64\x9a\xe5\x78\x3a\xa7\xf0\x1b\x25\x71\x20\x18\x1f\x8e\xf0\xdb\xd7\x3c\x90\x0e\x82\x7b\x6b\x55\x43\x2a\x66\xb3\xae\xeb\xa6\x34\xa8\x9d\xfa\xd8\xcc\xec\x89\x99\x66\x77\xe5\xf5\xed\xb2\xba\x9d\xcc\xa7\x17\x43\xcc\x83\xb3\x9c\x12\x22\xff\xdc\x4b\xe4\x1a\x9b\x23\x28\x04\x2b\x86\x36\x96\x61\xa9\x83\x8f\xa0\x26\x32\xd7\x50\xdf\x0b\xee\xa2\xa8\xb8\x66\x8c\xe4\xb7\xda\x51\xe4\x2c\x47\x2d\x49\xa3\x6c\xf6\xfa\x66\x5a\x2f\xf2\x24\xbd\x21\x78\x07\x72\x18\x2d\x2a\x94\xd5\x08\x1f\x17\x55\x59\x8d\xb3\x1c\x8f\xe5\xfa\xcb\xea\x61\x8d\xc7\xc5\xfd\xfd\x62\xb9\x2e\x6f\x2b\xac\xee\x71\xbd\x5a\xde\x94\xeb\x72\xb5\xac\xb0\xfa\x84\xc5\xf2\x09\x5f\xcb\xe5\xcd\x18\x2c\xda\x72\x04\x3f\x87\xd8\xeb\xf7\x11\xd2\xcf\x91\xeb\x7e\x68\x15\xf3\x1b\x01\x5b\x7f\x12\x94\x02\x1b\xd9\x8a\x81\x25\xd7\xec\xa9\x61\x34\xfe\xc0\xd1\x89\x6b\x10\x38\xee\x24\xf5\xdb\x4c\x20\x57\x67\x39\xac\xec\x44\x49\x07\xcf\x5f\x4d\x0d\x27\xf2\xfe\x23\xa4\x20\xe7\x1b\x2a\x70\xb8\xcc\x7e\x88\xab\x0b\x54\x1c\x0f\x62\x38\xdb\xb1\x52\x4d\x4a\x45\x06\x38\xda\x71\x01\x56\x53\x4f\xd2\xc1\x9c\x1d\x29\x90\xe1\x02\xe9\xc4\x9f\x18\x52\xb2\xbe\xc9\x00\x4b\x1b\xb6\xa9\x8f\x43\xbf\xce\x53\x60\xd6\xb7\xdf\xfb\x82\x8f\x3a\x80\x93\xe1\x59\x60\xfe\xdf\xd5\xff\x03\xf7\x77\x95\xe1\xab\x14\x1b\xd6\x6f\xaf\x39\x89\x2d\x1b\xf5\xf1\xcf\xdc\xbf\x02\x00\x00\xff\xff\xdf\x90\xf7\x0c\x91\x03\x00\x00")

func templatesScEtcdSvcYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesScEtcdSvcYamlTmpl,
		"templates/sc/etcd-svc.yaml.tmpl",
	)
}

func templatesScEtcdSvcYamlTmpl() (*asset, error) {
	bytes, err := templatesScEtcdSvcYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sc/etcd-svc.yaml.tmpl", size: 913, mode: os.FileMode(420), modTime: time.Unix(1542788448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesScEtcdYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\x4d\x6f\xe3\x46\x0c\xbd\xeb\x57\x10\xf6\xa5\x05\x22\xc9\x71\x0e\x41\xd5\x93\x1b\xa7\xa9\xd1\x8d\x6d\xc4\xde\x06\x8b\xa2\x58\xd0\x23\x5a\x22\x76\x34\xa3\xce\x50\xf6\xfa\xdf\x17\x23\x7f\x44\xda\x6c\x0a\x14\x0b\x74\xe9\x93\x86\x8f\xe4\xe3\x1b\x0e\x3d\xfc\x66\x8b\x86\x70\x67\xeb\x83\xe3\xa2\x14\x18\x8f\xae\x6f\xe1\xc1\xda\x42\x13\xcc\x8c\x4a\xa2\xe0\x7e\xc7\x8a\x8c\xa7\x1c\x1a\x93\x93\x03\x29\x09\x26\x35\xaa\x92\xce\x9e\x2b\xf8\x83\x9c\x67\x6b\x60\x9c\x8c\xe0\x87\x00\x18\x9c\x5c\x83\x1f\x7f\x8e\x86\x70\xb0\x0d\x54\x78\x00\x63\x05\x1a\x4f\x20\x25\x7b\xd8\xb2\x26\xa0\xcf\x8a\x6a\x01\x36\xa0\x6c\x55\x6b\x46\xa3\x08\xf6\x2c\x65\x5b\xe6\x94\x24\x89\x86\xf0\xe1\x94\xc2\x6e\x04\xd9\x00\x82\xb2\xf5\x01\xec\xb6\x8b\x03\x94\x96\x70\xb0\x52\xa4\xf6\x59\x9a\xee\xf7\xfb\x04\x5b\xb6\x89\x75\x45\xaa\x8f\x48\x9f\xbe\x9b\xdd\xdd\xcf\x57\xf7\xf1\x38\x19\xb5\x31\xef\x8d\x26\xef\xc1\xd1\xdf\x0d\x3b\xca\x61\x73\x00\xac\x6b\xcd\x0a\x37\x9a\x40\xe3\x1e\xac\x03\x2c\x1c\x51\x0e\x62\x03\xe1\xbd\x63\x61\x53\x5c\x81\xb7\x5b\xd9\xa3\xa3\x68\x08\x39\x7b\x71\xbc\x69\xa4\xa7\xd6\x99\x1e\xfb\x1e\xc0\x1a\x40\x03\x83\xc9\x0a\x66\xab\x01\xfc\x32\x59\xcd\x56\x57\xd1\x10\x9e\x67\xeb\xdf\x16\xef\xd7\xf0\x3c\x79\x7a\x9a\xcc\xd7\xb3\xfb\x15\x2c\x9e\xe0\x6e\x31\x9f\xce\xd6\xb3\xc5\x7c\x05\x8b\x5f\x61\x32\xff\x00\xbf\xcf\xe6\xd3\x2b\x20\x96\x92\x1c\xd0\xe7\xda\x05\xfe\xd6\x01\x07\x1d\x29\x0f\xa2\xad\x88\x7a\x04\xb6\xf6\x48\xc8\xd7\xa4\x78\xcb\x0a\x34\x9a\xa2\xc1\x82\xa0\xb0\x3b\x72\x86\x4d\x01\x35\xb9\x8a\x7d\xb8\x4d\x0f\x68\xf2\x68\x08\x9a\x2b\x16\x94\xf6\xe4\x55\x53\xed\x88\x7c\xfb\x10\x62\xcd\xa7\x19\xca\x82\xee\x3e\xdd\x5d\x6f\x48\xf0\x3a\xfa\xc4\x26\xcf\x60\x25\x28\xb4\x6d\xf4\x8a\x24\xaa\x48\x30\x47\xc1\x2c\x02\x30\x58\x51\x06\x24\x2a\x3f\x7d\xf8\x1a\x15\x65\xe0\xc9\xed\x58\x51\xac\x50\x50\xdb\x22\x0a\x0d\x07\xfc\xe9\x7c\xde\x86\x0d\x42\xdc\x20\x02\x70\xd4\x5e\xb4\xcf\xe0\x3a\x02\x10\xaa\x6a\x8d\x42\x01\x0f\xd0\xad\x16\x4c\xe3\x86\xb4\x3f\x7f\x41\x20\x7b\x21\x00\x70\xae\x13\x4c\x82\x90\xa6\xd5\xed\xc1\xa1\xa2\x25\x39\xb6\xf9\x8a\x94\x35\x79\x28\x35\x3a\xe1\x94\x35\x61\xa4\xc9\x5d\xb2\xc6\xfd\xbe\x8e\xc6\x15\x16\x94\x41\xa1\x5c\xc2\x36\x2d\xda\x37\x1a\xbf\xc4\xa6\x01\x9c\xdd\x24\xa3\xe4\xfa\xb6\x1f\xb3\x6c\xb4\x5e\x5a\xcd\xea\x90\xc1\x6c\x3b\xb7\xb2\x74\xe4\xc9\xc8\x05\xe5\xc8\xdb\xc6\x29\xea\x74\x05\xed\x43\x20\x2f\xbd\x33\x00\x55\x37\x81\xf9\xa8\xea\x9d\x56\x54\x59\x77\xc8\x60\x3c\x7a\xe4\x8e\xa3\x9d\x9b\xff\x94\xe0\xa6\x9b\x80\xcc\xee\x25\xf6\x2c\xc9\xfd\xfa\x6e\xfa\x71\x3a\x59\x4f\x3e\x4e\x67\x4f\x9d\x1c\x3b\xd4\x0d\x65\xd0\xaa\x10\x87\xfb\x8a\x73\x76\x17\xbf\xb2\x55\x85\x26\xef\xa6\x4b\x1b\xef\x52\x6d\x15\xea\x74\xc3\x26\xed\x49\x1d\x43\x1c\x6b\xf6\x42\x26\x56\x9a\xc9\x48\xdc\x38\xed\x3b\xee\xb0\x5c\xb2\x34\x1d\x25\xed\x2f\x1b\xdf\xdc\xfe\xd4\x0b\xc6\x7c\x47\x4e\xd8\xd3\xbf\xc7\xb7\xe5\x4b\xeb\xa5\x9f\xa1\xb6\xae\x2b\x5b\xfc\x32\x21\x4b\xeb\x24\x83\x1e\x78\x67\x75\x53\xd1\xa3\x6d\x4c\x3f\xe6\x65\x82\x5e\xcb\x01\x50\x05\xfc\x12\xa5\x7c\x53\x32\x47\x98\xb3\x21\xef\x97\xce\x6e\xa8\x7b\x89\x81\xfc\x03\x49\xff\x5e\xeb\xd7\xcc\xda\xe3\x63\x89\x92\x50\x4b\xd9\xf1\x6c\x91\x75\xe3\x68\x5d\x3a\xf2\xa5\xd5\xf9\xf1\xe5\x9d\x8d\x0d\x0b\xa3\x9e\x92\xc6\xc3\xeb\xf7\xd2\xe6\x7d\xe3\x2d\x05\xf3\x8d\x52\xe4\xfd\x1b\xb9\x85\x2b\xb2\x8d\x5c\x42\xc7\x17\x9f\xe6\x1d\xfd\x8f\x0d\xdf\x7c\xc7\x86\x8f\x43\x73\xa7\x91\xab\xf5\x69\xdb\xb5\xc3\x13\x7f\xb9\xee\xde\x9c\x22\x34\xc6\x9e\xfe\x13\xb2\x2f\x66\x31\x09\x8b\x3b\xf9\xd4\x6c\xc8\x19\x12\xf2\x61\x5d\x79\xb1\x0e\x8b\xf0\x1c\xd0\xfb\x0c\xbc\xa0\xc9\xd1\xbd\xde\x99\xd8\x76\xf2\x68\x73\xf2\x19\xfc\x09\x83\x27\xc2\xfc\xd9\xb1\xd0\xc2\x28\x1a\xc0\x5f\x27\xd8\x57\x36\xd6\x57\xf6\xd5\xa9\x68\x50\xeb\x81\xa3\x7f\x02\x00\x00\xff\xff\xd4\x14\x16\x24\x2a\x09\x00\x00")

func templatesScEtcdYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesScEtcdYamlTmpl,
		"templates/sc/etcd.yaml.tmpl",
	)
}

func templatesScEtcdYamlTmpl() (*asset, error) {
	bytes, err := templatesScEtcdYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sc/etcd.yaml.tmpl", size: 2346, mode: os.FileMode(420), modTime: time.Unix(1542788448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesScGencert_configJsonTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x72\xf6\x53\xb2\x52\x50\xaa\xae\x56\xd0\x73\x0c\xf0\x0c\x4e\x2d\x2a\xcb\x4c\x4e\xf5\x4b\xcc\x4d\x55\xa8\xad\x55\xd2\xe1\x52\xca\xc8\x2f\x2e\x29\x56\xb2\x52\x88\x86\xa8\xf1\xc8\x2f\x2e\x31\x04\x4b\xc1\xb9\x46\x20\xae\x42\xac\x0e\x97\x52\x76\x6a\xa5\x92\x95\x42\x35\x97\x82\x82\x52\x62\x4e\x7a\x3e\xc8\xdc\xa2\xe2\x44\x25\x1d\x90\x40\x71\x66\x55\xaa\x92\x95\x82\x91\x81\x89\x05\x57\x2d\x57\x2d\x17\x20\x00\x00\xff\xff\x0b\x41\x2e\x03\x7a\x00\x00\x00")

func templatesScGencert_configJsonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesScGencert_configJsonTmpl,
		"templates/sc/gencert_config.json.tmpl",
	)
}

func templatesScGencert_configJsonTmpl() (*asset, error) {
	bytes, err := templatesScGencert_configJsonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sc/gencert_config.json.tmpl", size: 122, mode: os.FileMode(420), modTime: time.Unix(1542788448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesScNamespaceYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\x41\x6f\xdb\x38\x10\x85\xef\xfa\x15\x0f\xd6\x65\x17\xb0\xe5\x24\x97\x5d\x78\x4f\xde\x24\x6d\x85\x06\x32\x10\x39\x0d\x72\x1c\x53\x63\x69\x10\x8a\x54\x49\xca\x8a\x11\xe4\xbf\x17\x94\x65\xb4\x41\x8e\xe1\x51\xf3\xf4\xe6\x9b\xc7\x61\xfa\xe9\x93\xa4\xb8\xb6\xdd\xd1\x49\xdd\x04\x5c\x5d\x5c\xfe\x83\xaf\xd6\xd6\x9a\x91\x1b\x95\x25\xb1\x7c\x27\x8a\x8d\xe7\x0a\xbd\xa9\xd8\x21\x34\x8c\x75\x47\xaa\xe1\x73\x65\x8e\x1f\xec\xbc\x58\x83\xab\xec\x02\x7f\x45\xc1\x6c\x2a\xcd\xfe\xfe\x2f\x49\x71\xb4\x3d\x5a\x3a\xc2\xd8\x80\xde\x33\x42\x23\x1e\x7b\xd1\x0c\x7e\x51\xdc\x05\x88\x81\xb2\x6d\xa7\x85\x8c\x62\x0c\x12\x9a\xb1\xcd\x64\x92\x25\x29\x9e\x26\x0b\xbb\x0b\x24\x06\x04\x65\xbb\x23\xec\xfe\x4f\x1d\x28\x8c\xc0\xf1\x34\x21\x74\x7e\xb5\x5c\x0e\xc3\x90\xd1\x48\x9b\x59\x57\x2f\xf5\x49\xe9\x97\x77\xf9\xf5\x6d\x51\xde\x2e\xae\xb2\x8b\xf1\x9f\x07\xa3\xd9\x7b\x38\xfe\xd9\x8b\xe3\x0a\xbb\x23\xa8\xeb\xb4\x28\xda\x69\x86\xa6\x01\xd6\x81\x6a\xc7\x5c\x21\xd8\x08\x3c\x38\x09\x62\xea\x39\xbc\xdd\x87\x81\x1c\x27\x29\x2a\xf1\xc1\xc9\xae\x0f\xef\xd2\x3a\xe3\x89\x7f\x27\xb0\x06\x64\x30\x5b\x97\xc8\xcb\x19\xfe\x5f\x97\x79\x39\x4f\x52\x3c\xe6\xdb\x6f\x9b\x87\x2d\x1e\xd7\xf7\xf7\xeb\x62\x9b\xdf\x96\xd8\xdc\xe3\x7a\x53\xdc\xe4\xdb\x7c\x53\x94\xd8\x7c\xc1\xba\x78\xc2\xf7\xbc\xb8\x99\x83\x25\x34\xec\xc0\x2f\x9d\x8b\xfc\xd6\x41\x62\x8e\x5c\xc5\xd0\x4a\xe6\x77\x00\x7b\x7b\x02\xf2\x1d\x2b\xd9\x8b\x82\x26\x53\xf7\x54\x33\x6a\x7b\x60\x67\xc4\xd4\xe8\xd8\xb5\xe2\xe3\x6d\x7a\x90\xa9\x92\x14\x5a\x5a\x09\x14\xc6\x2f\x1f\x86\x3a\xad\x48\xc9\xee\x20\x8a\xa1\x28\x90\xb6\x35\x0c\xb5\xec\x3b\x52\x9c\x7d\x28\x39\xf6\xb6\x77\x8a\x3d\x7c\x63\x7b\x5d\x61\x17\x83\x53\x8e\x29\x66\x42\xa6\x42\x4b\x86\x6a\xae\x62\xc6\xe3\xa2\xfc\x36\x8b\xbd\x3e\xbf\xf0\xd4\xc9\xb4\xaf\x2b\x1c\x2e\x93\x67\x31\xd5\x0a\xc5\xb9\x49\xd2\x72\xa0\x8a\x02\xad\x12\x8c\xad\x57\xf0\xa7\x11\x16\xd3\x08\x09\x40\xc6\xd8\x29\x92\x28\x03\x52\x38\x56\xd6\x55\xf0\x0a\x87\xe9\x31\x88\xd9\x5b\xd7\x8e\xaa\x51\x33\xd9\x4c\x2e\xd9\xf3\xbf\x3e\x13\xbb\xf4\x6a\x21\xc6\x07\xd2\x7a\x71\x38\x53\xcd\x5e\x5f\x91\x9d\xdf\xd4\xdb\xdb\x2c\xf9\x15\x00\x00\xff\xff\x76\xda\xba\x53\xe7\x03\x00\x00")

func templatesScNamespaceYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesScNamespaceYamlTmpl,
		"templates/sc/namespace.yaml.tmpl",
	)
}

func templatesScNamespaceYamlTmpl() (*asset, error) {
	bytes, err := templatesScNamespaceYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sc/namespace.yaml.tmpl", size: 999, mode: os.FileMode(420), modTime: time.Unix(1542788448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesScRbacYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x4d\x73\xdb\x38\x12\xbd\xf3\x57\x74\x51\x97\xdd\x2d\x52\x8a\x73\xd9\x2d\xed\x49\x71\x32\x19\xd5\x64\xec\x29\xcb\x99\x54\x2a\x95\x43\x0b\x6c\x91\x88\x41\x80\x03\x34\xa5\x68\x7e\xfd\x14\x00\x52\xd6\x97\x9d\x38\x72\x9c\xe8\x62\x17\x00\x76\xbf\x7e\xfd\xd0\xdd\xe4\xe0\xe4\x5f\x32\x80\x73\xd3\xac\xad\x2c\x2b\x86\xe7\xcf\xce\xfe\x0b\xaf\x8d\x29\x15\xc1\x54\x8b\x61\xe2\xb7\xdf\x48\x41\xda\x51\x01\xad\x2e\xc8\x02\x57\x04\x93\x06\x45\x45\xfd\x4e\x06\x7f\x92\x75\xd2\x68\x78\x3e\x7c\x06\xff\xf2\x07\xd2\x6e\x2b\xfd\xf7\xff\x93\x01\xac\x4d\x0b\x35\xae\x41\x1b\x86\xd6\x11\x70\x25\x1d\x2c\xa4\x22\xa0\xcf\x82\x1a\x06\xa9\x41\x98\xba\x51\x12\xb5\x20\x58\x49\xae\x82\x9b\xce\xc8\x30\x19\xc0\xfb\xce\x84\x99\x33\x4a\x0d\x08\xc2\x34\x6b\x30\x8b\xed\x73\x80\x1c\x00\xfb\x5f\xc5\xdc\xb8\xf1\x68\xb4\x5a\xad\x86\x18\xd0\x0e\x8d\x2d\x47\x2a\x9e\x74\xa3\x37\xd3\xf3\x57\x17\xb3\x57\xf9\xf3\xe1\xb3\xf0\xcc\x5b\xad\xc8\x39\xb0\xf4\x57\x2b\x2d\x15\x30\x5f\x03\x36\x8d\x92\x02\xe7\x8a\x40\xe1\x0a\x8c\x05\x2c\x2d\x51\x01\x6c\x3c\xe0\x95\x95\x2c\x75\x99\x81\x33\x0b\x5e\xa1\xa5\x64\x00\x85\x74\x6c\xe5\xbc\xe5\x1d\xb6\x7a\x78\xd2\xed\x1c\x30\x1a\x50\x43\x3a\x99\xc1\x74\x96\xc2\x8b\xc9\x6c\x3a\xcb\x92\x01\xbc\x9b\x5e\xff\x7a\xf9\xf6\x1a\xde\x4d\xae\xae\x26\x17\xd7\xd3\x57\x33\xb8\xbc\x82\xf3\xcb\x8b\x97\xd3\xeb\xe9\xe5\xc5\x0c\x2e\x7f\x81\xc9\xc5\x7b\xf8\x6d\x7a\xf1\x32\x03\x92\x5c\x91\x05\xfa\xdc\x58\x8f\xdf\x58\x90\x9e\x47\x2a\x3c\x69\x33\xa2\x1d\x00\x0b\x13\x01\xb9\x86\x84\x5c\x48\x01\x0a\x75\xd9\x62\x49\x50\x9a\x25\x59\x2d\x75\x09\x0d\xd9\x5a\x3a\x9f\x4d\x07\xa8\x8b\x64\x00\x4a\xd6\x92\x91\xc3\xca\x41\x50\x51\x22\x33\xd3\x5a\x41\x63\x10\xc8\xa8\x4c\x39\x62\xaa\x1b\x85\x4c\x6e\x64\xe7\x28\x86\x6b\xac\x95\x3f\x77\xba\x58\xb1\x91\x9d\xd6\xc6\xb0\x3c\x4b\x6e\xa4\x2e\xc6\xf0\x46\x3a\x4e\x24\x53\xed\xc6\xde\x07\x4c\xfe\x98\xc2\x8c\xec\x92\x2c\xf8\x67\x92\x01\x5c\x5f\xbe\xbc\x1c\x83\x5c\x44\xe5\x49\x07\x9f\x5a\xc7\x81\x0e\x8d\x35\xb9\x06\x05\x81\x92\x0b\x12\x6b\xa1\x08\xb0\xe8\x18\xc8\xa0\x36\x4b\xf2\xf9\x46\x28\x49\x93\x95\x02\xac\x51\x3e\xd3\x9e\x02\xff\xef\x86\x53\x6c\xa4\x8b\x3e\x93\x1c\xb6\x61\x06\x06\xb0\xe5\xca\x58\xf9\x77\xa0\x71\x78\xf3\x3f\x37\x94\x66\xb4\x3c\x9b\x13\xe3\x59\x02\x10\xe3\x38\x57\xad\x63\xb2\x57\xde\x03\x40\x4d\x8c\x05\x32\x8e\x13\xaf\x67\x8f\x73\x0c\xa9\x77\x21\x05\x75\x3c\x77\x86\xc6\x1b\xdf\x69\x02\x30\x88\x41\xda\x56\x11\x14\xb4\x90\x3a\x4a\x6d\x07\x70\x2f\x00\x54\x6a\xed\x77\xc2\x63\x1b\x2a\xf2\x23\x54\xe4\xc2\x68\xb6\x46\x29\xb2\x09\x04\xe3\xce\x03\x0b\xa1\xbe\xb6\xa6\x6d\xdc\x18\x3e\xa4\xe9\xc7\x00\xd6\x92\x0b\x82\x08\x6b\x1b\xb3\xae\xdb\x5d\x92\x9d\xbb\x71\xb8\xa5\x1f\xd2\x92\x38\xcd\x20\x55\xd2\x85\xbf\x2b\x64\x51\xa5\x1f\x93\x90\xc4\xbc\x23\xb4\x0b\x3a\x47\x21\x4c\xab\x19\x4a\x62\x07\x92\x1d\x98\x95\x8e\xf9\x78\x04\xc6\x5f\x48\x5d\x48\x5d\x9e\x40\xbc\x47\x72\x45\x8b\xf8\x58\x4f\xcb\x3d\x68\xc2\xb9\x63\x99\x7f\x88\x53\xd7\xce\x3f\x91\xe0\xbd\x64\x8c\x21\x4d\xb7\xcc\xcf\xa2\x9d\x49\xe4\x6f\xdb\xc3\x8e\x2d\xb8\x95\xc0\xad\xf3\xbc\xf3\x9e\x26\x83\x2d\x8d\x87\x14\x04\xd9\xb7\x5c\xe5\x05\x29\x2a\x91\x8d\x8d\x0a\x63\x03\xdd\x4a\xdc\x87\x82\x84\x8c\x15\x85\x4d\x77\x77\x84\xb1\x5b\x77\xe6\xc7\x27\x30\xdf\x0d\xe4\xbb\xe4\xd3\xad\x1d\x53\x3d\xde\xf5\xf4\x33\xe4\x70\x2e\x95\xe4\xb5\xcf\x9b\x25\x2c\x42\xce\x48\xb3\x14\x31\x3a\xb8\xf6\xf5\x04\x95\x32\x2b\x7f\xed\x62\x0e\xc3\xc1\x9d\x5e\x22\x8c\x5e\xc8\xb2\xc6\x06\xb8\x42\x86\x0a\xa3\x71\xdf\x51\xc9\x71\x45\x58\x90\xcd\xff\x03\xa4\xd9\x4a\xea\x94\x40\x3a\xb4\x57\x6c\x24\x60\x59\x5a\xcf\x88\x34\xfa\x9b\xd5\xf0\x48\x32\xb8\x8d\x3d\xb7\x01\xf6\x01\xb1\x37\xed\x9c\xf2\x98\xce\xd3\x84\xb2\xa7\x10\xfa\xcc\xa4\x43\xb9\xfd\x02\xa2\xa7\x55\x4d\xe8\xaa\xe7\x9b\x06\x90\xff\x8e\x1a\xcb\xdb\xee\x7a\xdb\x1a\xf2\xba\xdb\x09\x75\x20\x76\x1f\x07\x2b\xaf\x07\x14\xc2\x0f\x28\x41\x32\xbb\xf6\x8f\x5b\xd0\x44\x85\x57\x09\xc4\x85\x4e\x4b\x5d\x5f\xe9\x06\xbf\x64\x70\x60\xeb\xc9\x7b\xef\x21\xf4\xf4\x81\x0d\x92\x96\xa4\xf9\x68\x73\x14\x96\x90\x29\xcd\xd2\x26\xb4\xc5\x2c\x6d\x9b\xc2\x2f\x7c\x0c\xfd\x3a\x0e\x35\x85\x09\x63\x75\x69\xd1\x77\x46\x65\xe6\xa8\x3a\xae\xb3\x38\xb9\x79\x0e\x1b\xb4\x2c\x45\xab\xd0\x37\x53\x61\xfd\xc5\xb7\xb4\x20\x4b\x5a\x50\x01\x0b\x6b\xea\x9e\xc8\x79\xbc\x3e\xee\xeb\xa0\x77\xc6\xee\x6c\xec\x7b\x7d\x3d\x83\x4d\x48\xd0\xc7\x92\x41\x1f\x1d\xa4\xbe\x28\x76\xe1\x3d\xce\x60\xd1\xf9\xdf\x8c\x15\x9e\xb6\x5e\x88\x06\x4c\x6b\xf7\xf5\x03\xbc\x6e\xe8\x48\xf0\x47\x73\x7f\x0c\x94\x88\x3a\xea\xcf\x2b\x74\xee\xab\xf1\x65\x77\x26\x3c\xbb\x87\x9a\x6f\x84\xd6\x28\xd4\x3f\x25\xb0\xb9\x35\x37\x64\x5d\x9a\xf5\x06\xa4\x76\xec\xdf\x0b\xb7\x96\x7a\x95\x3e\x20\xf1\x8f\x0a\x6e\xe4\x18\xb9\xf5\x80\x8e\xe6\xfb\xae\xed\xc0\xf9\xed\xe6\x7e\x7c\xf7\xec\x6c\x6e\xeb\x21\x07\xfd\x53\x47\xa8\xd8\x94\x8b\x01\x94\x72\x49\xdd\xe0\x75\x50\x6a\x3b\x83\xd0\xcf\xd7\xb7\x37\xc4\x57\x6e\xb7\x79\x8b\x90\x3a\x4c\xdd\xbe\xb6\x0f\x7f\xd8\xc4\x76\x47\xbd\x7d\xa2\xd9\xfb\xb8\xf7\x13\x5b\xf1\x71\xa3\x5f\xec\xc9\x71\x2e\xf3\x89\x75\x10\xef\xe7\x28\x26\x7c\x2b\x81\xa8\x81\x74\xd1\x18\xa9\xc3\x47\x96\xad\xb9\x25\xbc\x07\xaa\x30\x4c\x00\x29\x12\x61\xf0\xea\x9b\x4a\xeb\xc8\x3f\x6a\x42\x58\x60\xc2\x27\x06\xae\xb6\x8c\xb9\x0c\x50\x07\x45\x84\x86\x8e\x35\x6d\xbd\x49\xe3\x4e\x9b\xef\x3f\x0a\x64\xa1\x4f\xed\x82\x38\x69\xd2\x7b\x98\x6e\x62\xa8\xb9\x32\xe2\x46\xea\x32\xff\x0a\xce\xf7\x86\xbc\x87\x74\xf4\x9e\xa5\x7b\x9a\xfa\x41\x4d\x8a\xbb\x87\xe6\xe2\xfa\xbe\xc9\xfe\xc0\x85\xc7\xbb\x55\xd0\x7a\x81\x1c\x0b\xf0\x00\xcc\x76\xc1\xdc\xd4\x8a\xef\x37\x7c\x7f\x19\xe2\x53\xcd\xd9\xa7\x68\xe4\x47\x5c\xf6\x7f\x02\x00\x00\xff\xff\xc9\x56\xbd\x7b\xe7\x15\x00\x00")

func templatesScRbacYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesScRbacYamlTmpl,
		"templates/sc/rbac.yaml.tmpl",
	)
}

func templatesScRbacYamlTmpl() (*asset, error) {
	bytes, err := templatesScRbacYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sc/rbac.yaml.tmpl", size: 5607, mode: os.FileMode(420), modTime: time.Unix(1542788448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesScServiceAccountsYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x4f\x4f\xdc\x30\x10\xc5\xef\xf9\x14\x4f\x9b\x4b\x2b\xed\x1f\xe0\x52\x29\x3d\xa5\x40\xdb\xa8\x68\x57\x22\x4b\x11\xc7\x59\x67\x36\x19\xd5\xb1\x5d\xdb\x21\xec\xb7\xaf\x92\x0d\x14\x4a\x0f\x95\xa8\x6f\x99\x99\x3c\xff\xe6\xf9\xa5\x6f\x3e\x49\x8a\x73\xeb\x0e\x5e\xea\x26\xe2\xec\xe4\xf4\x03\xbe\x58\x5b\x6b\x46\x61\xd4\x32\x19\xda\x57\xa2\xd8\x04\xae\xd0\x99\x8a\x3d\x62\xc3\xc8\x1d\xa9\x86\x1f\x3b\x73\x7c\x67\x1f\xc4\x1a\x9c\x2d\x4f\xf0\x6e\x18\x98\x4d\xad\xd9\xfb\x8f\x49\x8a\x83\xed\xd0\xd2\x01\xc6\x46\x74\x81\x11\x1b\x09\xd8\x8b\x66\xf0\x83\x62\x17\x21\x06\xca\xb6\x4e\x0b\x19\xc5\xe8\x25\x36\xe3\x35\x93\xc8\x32\x49\x71\x37\x49\xd8\x5d\x24\x31\x20\x28\xeb\x0e\xb0\xfb\xe7\x73\xa0\x38\x02\x0f\xa7\x89\xd1\x85\x6c\xb5\xea\xfb\x7e\x49\x23\xed\xd2\xfa\x7a\xa5\x8f\x93\x61\x75\x55\x9c\x5f\xae\xcb\xcb\xc5\xd9\xf2\x64\xfc\xe7\xc6\x68\x0e\x01\x9e\x7f\x76\xe2\xb9\xc2\xee\x00\x72\x4e\x8b\xa2\x9d\x66\x68\xea\x61\x3d\xa8\xf6\xcc\x15\xa2\x1d\x80\x7b\x2f\x51\x4c\x3d\x47\xb0\xfb\xd8\x93\xe7\x24\x45\x25\x21\x7a\xd9\x75\xf1\x85\x5b\x8f\x78\x12\x5e\x0c\x58\x03\x32\x98\xe5\x25\x8a\x72\x86\x4f\x79\x59\x94\xf3\x24\xc5\x6d\xb1\xfd\xba\xb9\xd9\xe2\x36\xbf\xbe\xce\xd7\xdb\xe2\xb2\xc4\xe6\x1a\xe7\x9b\xf5\x45\xb1\x2d\x36\xeb\x12\x9b\xcf\xc8\xd7\x77\xf8\x56\xac\x2f\xe6\x60\x89\x0d\x7b\xf0\x83\xf3\x03\xbf\xf5\x90\xc1\x47\xae\x06\xd3\x4a\xe6\x17\x00\x7b\x7b\x04\x0a\x8e\x95\xec\x45\x41\x93\xa9\x3b\xaa\x19\xb5\xbd\x67\x6f\xc4\xd4\x70\xec\x5b\x09\xc3\x6b\x06\x90\xa9\x92\x14\x5a\x5a\x89\x14\xc7\xca\xab\xa5\x8e\x11\x29\xd9\xdf\x8b\x62\x90\x52\xb6\x33\x31\x8c\x37\x85\xa9\xa8\x28\x92\xb6\x35\xc8\xc9\x58\x63\x3f\x08\x43\x59\x13\xbd\xd5\x9a\x7d\x92\xa2\x25\x43\x35\xfb\x51\xed\xed\x91\x26\x27\x53\x22\x33\xdc\x9f\x26\x3f\xc4\x54\x19\xae\x24\xc4\x44\x22\xb7\x21\x4b\x80\x14\xdb\x86\x51\xe6\x4f\x9e\x90\x93\x23\x5c\x02\x2c\xf0\x87\xc2\x90\xa8\xa3\xca\xb4\x69\x7e\x5c\x74\x6c\xb4\x1c\xa9\xa2\x48\xd9\xf8\x05\x18\x6a\x39\xc3\xec\x49\x70\xf6\xac\x1e\x1c\x29\xce\x1e\xad\x59\x4c\xd6\xfc\x8d\xe7\xb7\x3d\x8b\xc9\x9c\xff\x05\xf6\x5a\xf9\x1f\x08\x7f\x05\x00\x00\xff\xff\x28\xcc\xbc\x42\x69\x04\x00\x00")

func templatesScServiceAccountsYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesScServiceAccountsYamlTmpl,
		"templates/sc/service-accounts.yaml.tmpl",
	)
}

func templatesScServiceAccountsYamlTmpl() (*asset, error) {
	bytes, err := templatesScServiceAccountsYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sc/service-accounts.yaml.tmpl", size: 1129, mode: os.FileMode(420), modTime: time.Unix(1542788448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesScServiceYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x52\xcd\x6e\xdb\x3c\x10\xbc\xeb\x29\x06\xd6\xe5\xfb\x00\xff\x24\x69\x80\x16\xea\xc9\x75\xd2\x56\x68\x60\x07\x91\xd3\x20\xc7\x35\xb5\x96\x17\xa5\x49\x96\x5c\x47\xf1\xdb\x17\x92\xed\xa2\x41\x7a\x28\x10\xde\x38\x33\x9c\x1d\xee\x6e\xfe\xe6\x93\xe5\x98\xf9\xb0\x8f\xd2\x6c\x14\x17\x67\xe7\xef\xf1\xc5\xfb\xc6\x32\x4a\x67\xc6\x59\x47\xdf\x88\x61\x97\xb8\xc6\xce\xd5\x1c\xa1\x1b\xc6\x34\x90\xd9\xf0\x89\x19\xe2\x3b\xc7\x24\xde\xe1\x62\x7c\x86\xff\x3a\xc1\xe0\x48\x0d\xfe\xff\x98\xe5\xd8\xfb\x1d\xb6\xb4\x87\xf3\x8a\x5d\x62\xe8\x46\x12\xd6\x62\x19\xfc\x6c\x38\x28\xc4\xc1\xf8\x6d\xb0\x42\xce\x30\x5a\xd1\x4d\x5f\xe6\x68\x32\xce\x72\x3c\x1e\x2d\xfc\x4a\x49\x1c\x08\xc6\x87\x3d\xfc\xfa\x4f\x1d\x48\xfb\xc0\xdd\xd9\xa8\x86\x54\x4c\x26\x6d\xdb\x8e\xa9\x4f\x3b\xf6\xb1\x99\xd8\x83\x32\x4d\x6e\xca\xd9\xf5\xbc\xba\x1e\x5d\x8c\xcf\xfa\x37\xf7\xce\x72\x4a\x88\xfc\x73\x27\x91\x6b\xac\xf6\xa0\x10\xac\x18\x5a\x59\x86\xa5\x16\x3e\x82\x9a\xc8\x5c\x43\x7d\x17\xb8\x8d\xa2\xe2\x9a\x21\x92\x5f\x6b\x4b\x91\xb3\x1c\xb5\x24\x8d\xb2\xda\xe9\x8b\x6e\x9d\xe2\x49\x7a\x21\xf0\x0e\xe4\x30\x98\x56\x28\xab\x01\x3e\x4d\xab\xb2\x1a\x66\x39\x1e\xca\xe5\xd7\xc5\xfd\x12\x0f\xd3\xbb\xbb\xe9\x7c\x59\x5e\x57\x58\xdc\x61\xb6\x98\x5f\x95\xcb\x72\x31\xaf\xb0\xf8\x8c\xe9\xfc\x11\xdf\xca\xf9\xd5\x10\x2c\xba\xe1\x08\x7e\x0e\xb1\xcb\xef\x23\xa4\xeb\x23\xd7\x5d\xd3\x2a\xe6\x17\x01\xd6\xfe\x10\x28\x05\x36\xb2\x16\x03\x4b\xae\xd9\x51\xc3\x68\xfc\x13\x47\x27\xae\x41\xe0\xb8\x95\xd4\x4d\x33\x81\x5c\x9d\xe5\xb0\xb2\x15\x25\xed\x91\x57\x9f\x3a\xac\x48\xc5\xf1\x49\x0c\xc3\x90\x92\xf5\x0d\xd2\xe1\xde\x93\x6f\xdf\xd0\x1f\xe2\xea\xe2\x54\x23\xa3\x20\xc7\x75\x2b\xf0\x74\x9e\x6d\x59\xa9\x26\xa5\x22\x03\x1c\x6d\xb9\x38\x15\x1f\x1d\xc3\x8c\x28\xc8\x91\x4b\x81\xcc\x6b\x41\x06\x58\x5a\xb1\x4d\x9d\x05\xba\xb1\xff\xd5\xa3\x83\x38\x66\x5d\xef\x3a\x61\x0e\xdd\x07\x2e\x30\xf7\x35\xdf\xfa\xa8\x19\x90\xd8\xb2\x51\x1f\xff\xc9\x07\x08\x3e\x6a\x5f\x73\xf4\x3b\xb8\xd9\x45\xee\x1f\x87\xe8\xd5\x1b\x6f\x0b\x2c\x67\xb7\x07\xc4\x47\x2d\x70\x79\xf9\xae\xbf\x29\xc5\x86\xf5\xb6\xc7\x3e\x74\x60\xf6\x2b\x00\x00\xff\xff\xdb\x5e\xc8\x70\x0a\x04\x00\x00")

func templatesScServiceYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesScServiceYamlTmpl,
		"templates/sc/service.yaml.tmpl",
	)
}

func templatesScServiceYamlTmpl() (*asset, error) {
	bytes, err := templatesScServiceYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sc/service.yaml.tmpl", size: 1034, mode: os.FileMode(420), modTime: time.Unix(1542788448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesScTlsCertSecretYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x53\xc1\x6e\xe3\x36\x10\xbd\xeb\x2b\x1e\xe2\x4b\x0b\x38\x72\x36\x97\x02\xee\x49\xeb\x75\x5b\x21\x81\x1d\x44\x4e\x16\x39\x2d\xc6\xd4\x58\x1e\x84\x22\x59\x92\x8a\x57\x58\xec\xbf\x17\x94\x94\xb4\x81\xd1\x53\x78\xe4\xbc\x79\xf3\xde\xe3\x70\xf6\xe1\x93\xcd\xb0\xb2\xae\xf7\xd2\x1c\x23\xae\xaf\x3e\xfd\x86\x3f\xad\x6d\x34\xa3\x34\x2a\xcf\x52\xf9\x56\x14\x9b\xc0\x35\x3a\x53\xb3\x47\x3c\x32\x0a\x47\xea\xc8\xaf\x95\x39\x1e\xd9\x07\xb1\x06\xd7\xf9\x15\x7e\x49\x80\x8b\xa9\x74\xf1\xeb\xef\xd9\x0c\xbd\xed\xd0\x52\x0f\x63\x23\xba\xc0\x88\x47\x09\x38\x88\x66\xf0\x77\xc5\x2e\x42\x0c\x94\x6d\x9d\x16\x32\x8a\x71\x92\x78\x1c\xc6\x4c\x24\x79\x36\xc3\xd3\x44\x61\xf7\x91\xc4\x80\xa0\xac\xeb\x61\x0f\xff\xc5\x81\xe2\x20\x38\x9d\x63\x8c\x2e\x2c\x17\x8b\xd3\xe9\x94\xd3\xa0\x36\xb7\xbe\x59\xe8\x11\x19\x16\xb7\xe5\x6a\xbd\xa9\xd6\x97\xd7\xf9\xd5\xd0\xf3\x60\x34\x87\x00\xcf\x7f\x77\xe2\xb9\xc6\xbe\x07\x39\xa7\x45\xd1\x5e\x33\x34\x9d\x60\x3d\xa8\xf1\xcc\x35\xa2\x4d\x82\x4f\x5e\xa2\x98\x66\x8e\x60\x0f\xf1\x44\x9e\xb3\x19\x6a\x09\xd1\xcb\xbe\x8b\xef\xd2\x7a\x95\x27\xe1\x1d\xc0\x1a\x90\xc1\x45\x51\xa1\xac\x2e\xf0\xb9\xa8\xca\x6a\x9e\xcd\xf0\xb5\xdc\xfd\xb5\x7d\xd8\xe1\x6b\x71\x7f\x5f\x6c\x76\xe5\xba\xc2\xf6\x1e\xab\xed\xe6\x4b\xb9\x2b\xb7\x9b\x0a\xdb\x3f\x50\x6c\x9e\x70\x53\x6e\xbe\xcc\xc1\x12\x8f\xec\xc1\xdf\x9d\x4f\xfa\xad\x87\xa4\x1c\xb9\x4e\xa1\x55\xcc\xef\x04\x1c\xec\x28\x28\x38\x56\x72\x10\x05\x4d\xa6\xe9\xa8\x61\x34\xf6\x85\xbd\x11\xd3\xc0\xb1\x6f\x25\xa4\xd7\x0c\x20\x53\x67\x33\x68\x69\x25\x52\x1c\x6e\xce\x4c\x8d\x2b\x72\xd7\xed\xb5\xa8\xc5\x9d\x97\x17\x8a\x8c\x67\xee\xe1\x48\xfc\x30\x30\xb0\x7f\x11\xc5\x50\x14\x49\xdb\x06\xe4\x64\xb8\x63\x3f\x47\x88\x36\x85\x4d\x21\x9b\x21\xb0\xf2\x1c\x73\x3c\x84\x31\xe2\xc0\xaa\xf3\xac\xfb\xb4\x19\x6d\x67\x44\x25\xe6\xb7\xd5\x68\x49\xcc\x82\x9a\xc6\x73\x43\x29\x4c\x72\x32\x70\x24\xde\x51\x53\xf5\xb8\xfa\x76\xf7\xf0\xf9\xb6\x5c\x7d\xbb\x59\x3f\x2d\xcf\x74\xb8\x41\x73\xd2\xfa\x0a\xbe\x2f\x1f\x8b\xdd\xfa\x7f\xd0\xff\x5a\x4b\xec\x1f\xff\x76\xe4\x64\xfa\x35\x4b\xbc\x7c\xca\x9e\xc5\xd4\x4b\x54\x43\x06\x59\xec\x1d\x2f\xf1\xdc\xed\xd9\x1b\x8e\x1c\x72\xb1\x8b\xa8\x43\xd6\x72\xa4\x9a\x22\x2d\x33\xc0\x50\xcb\xcb\x64\x7b\xf4\x7c\xa9\xd8\xc7\xe9\x3a\x38\x52\xfc\x66\xe1\x72\xb2\x90\x01\x9a\xf6\xac\x43\xea\x46\xda\xee\x33\xc8\xe5\x1b\x5d\xf6\x3a\x26\xea\x90\x2b\x1f\x97\xf8\xf1\x03\x79\x71\x57\x56\x63\xc7\xf8\xe0\x37\xdc\xe3\xe7\xcf\x09\xf5\xcc\xfd\x19\x6a\x0c\x6d\x82\xfd\x13\x00\x00\xff\xff\x84\x88\x6f\x8c\xac\x04\x00\x00")

func templatesScTlsCertSecretYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesScTlsCertSecretYamlTmpl,
		"templates/sc/tls-cert-secret.yaml.tmpl",
	)
}

func templatesScTlsCertSecretYamlTmpl() (*asset, error) {
	bytes, err := templatesScTlsCertSecretYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sc/tls-cert-secret.yaml.tmpl", size: 1196, mode: os.FileMode(420), modTime: time.Unix(1542788448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcpGcpBrokerYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4d\x6f\x22\x47\x10\xbd\xcf\xaf\x78\x82\x4b\x22\xc1\xb0\xde\x4b\x22\xf6\xc4\xb2\x8e\x33\x8a\x85\x2d\x63\xc7\xda\x63\xd1\x53\xcc\x74\x68\xba\x67\xbb\x7a\x60\x11\xe2\xbf\x47\x3d\x3d\xd8\x46\x1b\x9f\x36\x9c\x86\xfa\x78\xf5\xaa\xea\x75\x0d\x7f\xfa\x97\x0d\x31\x77\xcd\xc1\xeb\xaa\x0e\xf8\xf8\xe1\xea\x37\xdc\x38\x57\x19\x46\x61\x55\x9e\x45\xf7\xad\x56\x6c\x85\x4b\xb4\xb6\x64\x8f\x50\x33\x66\x0d\xa9\x9a\xcf\x9e\x11\xfe\x66\x2f\xda\x59\x7c\xcc\x3f\xe0\x97\x18\x30\xe8\x5d\x83\x5f\x3f\x65\x43\x1c\x5c\x8b\x2d\x1d\x60\x5d\x40\x2b\x8c\x50\x6b\xc1\x5a\x1b\x06\x7f\x57\xdc\x04\x68\x0b\xe5\xb6\x8d\xd1\x64\x15\x63\xaf\x43\xdd\x95\xe9\x41\xf2\x6c\x88\xaf\x3d\x84\x5b\x05\xd2\x16\x04\xe5\x9a\x03\xdc\xfa\x6d\x1c\x28\x74\x84\xe3\xaf\x0e\xa1\x91\xe9\x64\xb2\xdf\xef\x73\xea\xd8\xe6\xce\x57\x13\x93\x22\x65\x72\x5b\xcc\xaf\x17\xcb\xeb\xf1\xc7\xfc\x43\x97\xf3\x64\x0d\x8b\xc0\xf3\xb7\x56\x7b\x2e\xb1\x3a\x80\x9a\xc6\x68\x45\x2b\xc3\x30\xb4\x87\xf3\xa0\xca\x33\x97\x08\x2e\x12\xde\x7b\x1d\xb4\xad\x46\x10\xb7\x0e\x7b\xf2\x9c\x0d\x51\x6a\x09\x5e\xaf\xda\x70\x31\xad\x33\x3d\x2d\x17\x01\xce\x82\x2c\x06\xb3\x25\x8a\xe5\x00\x9f\x67\xcb\x62\x39\xca\x86\x78\x2e\x1e\xff\xbc\x7b\x7a\xc4\xf3\xec\xe1\x61\xb6\x78\x2c\xae\x97\xb8\x7b\xc0\xfc\x6e\xf1\xa5\x78\x2c\xee\x16\x4b\xdc\xfd\x81\xd9\xe2\x2b\xfe\x2a\x16\x5f\x46\x60\x1d\x6a\xf6\xe0\xef\x8d\x8f\xfc\x9d\x87\x8e\x73\xe4\x32\x0e\x6d\xc9\x7c\x41\x60\xed\x12\x21\x69\x58\xe9\xb5\x56\x30\x64\xab\x96\x2a\x46\xe5\x76\xec\xad\xb6\x15\x1a\xf6\x5b\x2d\x71\x9b\x02\xb2\x65\x36\x84\xd1\x5b\x1d\x28\x74\x96\x1f\x9a\x4a\x12\x79\x92\x98\xda\x41\xb3\xf2\x1c\x5e\x2a\x91\xf1\x4c\xe5\x01\xca\x33\xc5\x9e\x85\xfd\x4e\x2b\x06\x29\xe5\x5a\x1b\x46\x50\xce\x5a\x56\x41\x10\x5c\x36\xc4\xcd\xfc\x1e\x2b\xef\x36\xec\x41\xa1\x03\x78\x7a\xb8\xcd\xf1\xac\x8d\x41\xc5\xc9\x62\xb4\x84\xb8\xf8\x1e\x4a\x3a\xe3\x6b\x62\x36\x44\xe3\xdd\x4e\x97\x2c\x39\x66\xeb\xc0\x3e\x15\x4f\x04\x75\x5c\xb1\xb8\xd6\x2b\x1e\x81\xa2\x18\x3d\xa4\x76\xad\x29\xb1\x62\x74\xbb\xee\x88\x48\xab\x14\x8b\xac\x5b\x63\x0e\xa9\x62\xa8\x59\xf8\xb5\x68\xd4\xe8\xb4\xd3\xda\xa6\x5d\xb1\x0a\x89\x5f\xef\x56\x86\x44\x58\xe2\x68\x7e\xfe\x7d\x52\xa3\xfb\xe7\x35\x7d\xc1\xa7\x40\xc6\x55\xf9\xe6\x77\xc9\xb5\x9b\xec\xae\x56\x1c\xe8\x2a\x3b\x1e\xf5\x1a\xfc\x0d\xf9\x52\xb9\x86\x31\x50\xa6\x95\xc0\x7e\x70\x3a\x65\x1b\x6d\xcb\x29\xe6\xc9\xb0\x4c\x28\x9f\xd3\xbc\xb6\x1c\xa8\xa4\x40\xd3\x0c\xb0\xb4\xe5\x29\x2a\xd5\x8c\xfb\x61\x1e\x8f\x6c\x84\x5f\x00\xde\xcf\xfc\x8f\xdc\xb3\x51\x1a\x52\x3c\xc5\xf1\x88\x7c\x71\xfe\x8b\xd3\x29\x62\xdb\xf2\x74\xca\xa2\x1a\x23\xc4\x30\x2e\x3b\x3e\xae\x5e\x13\xf1\xb3\x5b\x6c\x2a\x97\xc7\x90\x2e\xec\xde\xbb\xb2\x55\x51\x90\xe7\x81\xf4\x9a\x99\xdd\x17\x9f\xba\x23\x23\x81\x2a\x6d\xab\x73\xf4\x3f\xac\x42\x1c\x1e\x59\x19\xef\xc9\x6c\x42\xed\x5d\x5b\xd5\x23\x18\xa7\xc8\x24\x15\x34\x29\x6c\x74\x3e\x01\x02\x6d\x75\x20\xd3\xab\xc7\xd9\xa8\xb9\x9d\xf6\xa1\x25\x73\xd6\x68\x8f\x83\xf9\x6d\xd1\xb1\x43\xeb\xcd\xf4\xf5\xf6\x5c\x90\xcb\xab\xee\xac\x52\xa3\x25\x57\x6e\x3b\xd9\x5d\x91\x69\x6a\xba\x9a\xf4\x85\x65\xf2\x03\xbf\x49\xca\x94\xc9\xc5\x50\x87\x97\x5d\x45\xdf\x59\x95\x23\xec\x6b\xad\xea\x78\x68\x5a\xe9\x8f\x98\x31\x39\x16\xcc\x65\x7c\x61\x51\xe3\x6f\x9b\xfd\x1f\x48\xbf\x2d\xff\x3e\xdf\x54\x22\x2a\xe0\x66\x7e\x9f\xd6\x19\x77\x7d\x3a\x75\x04\xbe\xb0\x28\xaf\x57\xfd\x53\xee\x2f\x48\xea\x44\x39\x1b\xef\x7d\xef\xa9\x9d\x0f\x63\xa3\x77\xb1\x35\x26\x1f\x37\xe0\x36\x6c\x33\x80\xda\x50\x17\x76\xed\x92\x14\x93\x33\x7d\xa3\x07\x7c\xe0\xf5\xd9\xf0\x56\xab\xb2\x53\xe3\xfe\x18\x8d\x53\xe0\x45\xd0\x7b\xda\xfd\x37\x00\x00\xff\xff\x4c\x29\x98\xb9\x78\x07\x00\x00")

func templatesGcpGcpBrokerYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcpGcpBrokerYamlTmpl,
		"templates/gcp/gcp-broker.yaml.tmpl",
	)
}

func templatesGcpGcpBrokerYamlTmpl() (*asset, error) {
	bytes, err := templatesGcpGcpBrokerYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcp/gcp-broker.yaml.tmpl", size: 1912, mode: os.FileMode(420), modTime: time.Unix(1542970897, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcpGoogleOauthDeploymentYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x3c\xd8\x87\xb6\x40\xfc\x91\xec\xa2\x2d\xd4\x93\x9b\xa4\x5b\xb7\xa9\x1d\xc4\xde\x2e\xf6\x38\xa6\xc6\x12\x11\x8a\x54\xc9\x91\x1d\x61\xb1\xff\xbd\xa0\x2c\x3b\xd2\xf6\xb2\xc5\xf2\x92\x98\xf3\xe6\xcd\xe3\xe3\xa3\xc6\xdf\xbc\x92\x31\x6e\x5d\xd5\x78\x9d\x17\x82\x9b\xf9\xf5\x4f\x78\xe7\x5c\x6e\x18\x4b\xab\xa6\x49\x2c\x3f\x68\xc5\x36\x70\x86\xda\x66\xec\x21\x05\x63\x51\x91\x2a\xf8\x5c\xb9\xc2\xdf\xec\x83\x76\x16\x37\xd3\x39\xbe\x8f\x80\x51\x57\x1a\xfd\xf0\x4b\x32\x46\xe3\x6a\x94\xd4\xc0\x3a\x41\x1d\x18\x52\xe8\x80\xbd\x36\x0c\x7e\x51\x5c\x09\xb4\x85\x72\x65\x65\x34\x59\xc5\x38\x6a\x29\xda\x31\x1d\xc9\x34\x19\xe3\x63\x47\xe1\x76\x42\xda\x82\xa0\x5c\xd5\xc0\xed\xfb\x38\x90\xb4\x82\xe3\x2a\x44\xaa\x90\xce\x66\xc7\xe3\x71\x4a\xad\xda\xa9\xf3\xf9\xcc\x9c\x90\x61\xf6\xb0\xbc\xbd\x5f\x6d\xee\x27\x37\xd3\x79\xdb\xf3\xde\x1a\x0e\x01\x9e\xff\xa9\xb5\xe7\x0c\xbb\x06\x54\x55\x46\x2b\xda\x19\x86\xa1\x23\x9c\x07\xe5\x9e\x39\x83\xb8\x28\xf8\xe8\xb5\x68\x9b\x5f\x21\xb8\xbd\x1c\xc9\x73\x32\x46\xa6\x83\x78\xbd\xab\x65\xe0\xd6\x59\x9e\x0e\x03\x80\xb3\x20\x8b\xd1\x62\x83\xe5\x66\x84\x5f\x17\x9b\xe5\xe6\x2a\x19\xe3\xc3\x72\xfb\xfb\xfa\xfd\x16\x1f\x16\x4f\x4f\x8b\xd5\x76\x79\xbf\xc1\xfa\x09\xb7\xeb\xd5\xdd\x72\xbb\x5c\xaf\x36\x58\xff\x86\xc5\xea\x23\xfe\x5c\xae\xee\xae\xc0\x5a\x0a\xf6\xe0\x97\xca\x47\xfd\xce\x43\x47\x1f\x39\x8b\xa6\x6d\x98\x07\x02\xf6\xee\x24\x28\x54\xac\xf4\x5e\x2b\x18\xb2\x79\x4d\x39\x23\x77\x07\xf6\x56\xdb\x1c\x15\xfb\x52\x87\x78\x9b\x01\x64\xb3\x64\x0c\xa3\x4b\x2d\x24\xed\xce\x7f\x0e\x75\x8a\xc8\x1d\x57\xc6\x35\x25\x5b\x69\x67\x9c\x12\xf4\x5d\x80\xa3\x5a\x0a\x94\x2e\xab\x0d\x4f\xb1\xf5\x64\xc3\xde\xf9\x32\x80\x10\xd8\x1f\xb4\x62\x90\x52\xae\xb6\x12\xe2\x20\x67\xf3\x89\xd1\x07\xce\xf0\xc7\x66\xbd\xc2\x33\x37\xd1\x6b\x42\x28\x9c\x97\xae\xb2\x63\xf2\x51\x82\x7b\x66\x1b\xab\x42\xe6\xb9\xfd\x5b\x30\xde\xdd\x3e\x26\x63\xec\xbc\x7b\x66\x3f\xc5\x36\xe6\x70\x62\x47\x20\x9f\x47\xef\x23\xc2\x52\xc9\xa1\x22\xc5\xb1\x25\x30\x79\x55\xbc\xba\xc2\xca\xb3\x24\x63\x28\x67\x63\xc8\xa2\x1b\x71\xbf\x27\xeb\x0b\xd1\x17\x99\xa7\x61\x19\xef\xa9\x36\x91\xe1\x75\x8c\x0e\x18\xe5\xad\x1d\x93\xd6\x8c\x51\x84\xea\x80\x9d\xb6\xe4\x1b\x88\xd7\x7c\x52\x26\x67\x73\x5a\xa7\x93\x71\x1b\x0f\x63\x3a\x55\x21\x26\xae\x7d\x36\x17\xea\xd6\xf9\x6f\x7f\xfe\xcf\xda\x66\x69\xef\x02\x13\xaa\x74\xf7\x9c\x53\xf0\x8b\xb0\x6d\xb3\x30\x3b\x5c\xef\x58\xe8\x3a\x29\x59\x28\x23\xa1\x34\x41\xab\x25\x45\xff\x78\xdd\x66\x2b\x30\xc5\xa7\x4f\x98\xae\x2e\x56\x7c\xfe\x9c\x00\x86\x76\x6c\x42\x6c\x46\x7c\x60\xe9\xd9\xd2\x89\x22\x21\xe3\xf2\xc9\x80\x2d\x06\x35\x62\x3d\xb7\x4f\x31\xa4\xb8\x4e\x80\xc0\x86\x95\x38\x7f\x62\x29\x49\x54\xf1\xd0\xa3\xfd\x1a\x62\x40\xb8\xac\x0c\x09\x77\x24\xbd\x53\xc5\x65\x06\x7c\x5f\xc7\x08\x9c\xe5\xb6\xff\x9f\xc0\x8b\x53\x52\x56\xad\x53\xc3\x24\x74\xc0\x2e\x6d\xec\x2f\xe3\x26\x9d\xb1\xe7\x39\xaf\x03\xe2\xd2\x25\xe5\xd1\x75\xe5\xa7\xda\xcd\x72\x55\x4d\xba\x51\x61\x36\x68\x48\xe3\xe9\x82\x0c\xfb\x1e\x6b\x63\x1e\x9d\xd1\xaa\x49\xb1\x30\x47\x6a\xc2\xa5\xee\x39\xb8\xda\x2b\xee\x9d\x1a\xed\xf7\x90\x83\x0c\xf6\x00\x55\xd5\x29\xae\xe7\xf3\x72\xb0\x5b\x72\xe9\x7c\x93\xe2\x66\xfe\x97\xee\x15\xda\xcf\xc7\xff\x22\x78\xd3\x27\x20\x9f\xf7\x9a\x27\x98\xd8\xde\x8f\xd1\x97\x09\x1b\xf5\x91\x87\x3e\xf2\xc7\x41\x89\x4c\x70\xc6\xe5\xe2\x82\x64\xec\xfd\xa5\x54\x39\x2f\x83\x71\x97\xdb\x79\x74\x5e\x52\xfc\xfc\xf6\xed\x9b\xe4\xdf\x00\x00\x00\xff\xff\x99\xcd\xcf\x11\x75\x07\x00\x00")

func templatesGcpGoogleOauthDeploymentYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcpGoogleOauthDeploymentYamlTmpl,
		"templates/gcp/google-oauth-deployment.yaml.tmpl",
	)
}

func templatesGcpGoogleOauthDeploymentYamlTmpl() (*asset, error) {
	bytes, err := templatesGcpGoogleOauthDeploymentYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcp/google-oauth-deployment.yaml.tmpl", size: 1909, mode: os.FileMode(420), modTime: time.Unix(1542788505, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcpGoogleOauthRbacYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x53\xc1\x8e\xdb\x36\x10\xbd\xeb\x2b\x1e\xa4\x4b\x0b\xd8\xf2\x7a\x2f\x2d\xd4\x93\xb3\xbb\x4d\x85\x2e\x6c\xc0\x72\x1a\x04\x41\x0e\x14\x35\x96\xa6\xa1\x49\x95\x1c\x59\x71\x83\xfc\x7b\x21\x59\x0e\x6c\x14\x68\x1b\x2c\xca\x13\xc5\x19\xbd\xf7\xe6\xf1\x31\x79\xf1\x8a\x12\x3c\xb8\xf6\xe4\xb9\x6e\x04\xf7\x77\xcb\x1f\xf0\xda\xb9\xda\x10\x72\xab\xd3\x68\x28\x3f\xb3\x26\x1b\xa8\x42\x67\x2b\xf2\x90\x86\xb0\x6a\x95\x6e\xe8\x52\x99\xe1\x37\xf2\x81\x9d\xc5\x7d\x7a\x87\xef\x86\x86\x78\x2a\xc5\xdf\xff\x14\x25\x38\xb9\x0e\x07\x75\x82\x75\x82\x2e\x10\xa4\xe1\x80\x3d\x1b\x02\x7d\xd2\xd4\x0a\xd8\x42\xbb\x43\x6b\x58\x59\x4d\xe8\x59\x9a\x91\x66\x02\x49\xa3\x04\xef\x26\x08\x57\x8a\x62\x0b\x05\xed\xda\x13\xdc\xfe\xba\x0f\x4a\x46\xc1\xc3\x6a\x44\xda\x90\x2d\x16\x7d\xdf\xa7\x6a\x54\x9b\x3a\x5f\x2f\xcc\xb9\x33\x2c\x9e\xf3\x87\xa7\x75\xf1\x34\xbf\x4f\xef\xc6\x7f\xde\x58\x43\x21\xc0\xd3\x1f\x1d\x7b\xaa\x50\x9e\xa0\xda\xd6\xb0\x56\xa5\x21\x18\xd5\xc3\x79\xa8\xda\x13\x55\x10\x37\x08\xee\x3d\x0b\xdb\x7a\x86\xe0\xf6\xd2\x2b\x4f\x51\x82\x8a\x83\x78\x2e\x3b\xb9\x71\xeb\x22\x8f\xc3\x4d\x83\xb3\x50\x16\xf1\xaa\x40\x5e\xc4\x78\xb5\x2a\xf2\x62\x16\x25\x78\x9b\xef\x7e\xd9\xbc\xd9\xe1\xed\x6a\xbb\x5d\xad\x77\xf9\x53\x81\xcd\x16\x0f\x9b\xf5\x63\xbe\xcb\x37\xeb\x02\x9b\x9f\xb1\x5a\xbf\xc3\xaf\xf9\xfa\x71\x06\x62\x69\xc8\x83\x3e\xb5\x7e\xd0\xef\x3c\x78\xf0\x91\xaa\xc1\xb4\x82\xe8\x46\xc0\xde\x9d\x05\x85\x96\x34\xef\x59\xc3\x28\x5b\x77\xaa\x26\xd4\xee\x48\xde\xb2\xad\xd1\x92\x3f\x70\x18\x6e\x33\x40\xd9\x2a\x4a\x60\xf8\xc0\xa2\x64\x3c\xf9\xdb\x50\x63\x44\x5e\x1e\x42\xd5\xf2\x94\xa1\x0c\xc7\x65\xf4\x91\x6d\x95\xe1\x99\x83\x44\x2c\x74\x08\x59\x34\xc7\x75\x8b\x2f\x95\x4e\x55\x27\x8d\xf3\xfc\xe7\x28\x2d\xfd\xf8\x63\x48\xd9\x2d\x8e\xcb\x92\x44\x2d\x23\xe0\x8c\xb1\x75\x86\x22\xe0\x40\xa2\x2a\x25\x2a\x8b\x86\x70\x58\x75\xa0\x0c\x71\x20\x7f\x64\x4d\x5a\x89\x32\xae\x9e\x10\xb2\x7a\x8c\xff\xdc\x0d\xf0\xf1\xd7\xf6\xd0\x2a\x4d\x19\x3e\x7f\x46\xba\xbe\x7c\xe2\xcb\x97\x08\xf0\x9d\xa1\x30\xe0\x26\xd8\x6d\x1e\x37\x19\x2a\x37\x06\xbd\xf6\xca\x0a\x6a\xe3\x4a\x65\xa0\xb4\xa6\x10\x22\x60\x9c\xe3\xb5\x77\x5d\x1b\x32\xbc\x8f\xe3\x0f\x23\x83\xa7\xe0\x3a\xaf\x69\x3c\x0b\xa4\x3d\x49\x98\x4a\x47\xf2\x65\xc8\xc6\x4c\xbf\x8f\x6b\x92\x78\x16\x1b\x0e\x12\xcf\x10\xf7\x4a\x74\x33\x6c\xb4\x27\x25\x34\xec\xba\xb6\x9a\x76\xed\xa5\x58\x91\x21\xa1\x11\xed\x3f\x90\x7f\x9d\xf5\x5f\xf9\x27\xfa\x0f\x51\x82\x9a\x8f\xe7\xa0\x5d\x7b\x87\xc9\xde\x61\x76\xd7\x59\x99\x3c\x18\x5e\x4f\xdf\x28\x09\xa8\x68\xcf\x96\xaa\xe1\x2d\xb1\x04\x78\x67\x28\x7d\xd1\x3d\xbf\x62\x5b\xb1\xad\xff\xe7\xeb\x76\x86\xb6\xb4\x3f\x23\x5f\xec\xfc\x07\xa5\x63\xdf\x4d\x16\xbf\x51\x50\xe8\xca\xdf\x49\xcb\x18\xb1\xf9\x15\x63\x1c\x5f\x41\x17\x67\xa8\xd5\xd9\xea\x6b\x92\x6f\x9b\xef\xaf\x00\x00\x00\xff\xff\x6d\xf5\x75\xac\x50\x06\x00\x00")

func templatesGcpGoogleOauthRbacYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcpGoogleOauthRbacYamlTmpl,
		"templates/gcp/google-oauth-rbac.yaml.tmpl",
	)
}

func templatesGcpGoogleOauthRbacYamlTmpl() (*asset, error) {
	bytes, err := templatesGcpGoogleOauthRbacYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcp/google-oauth-rbac.yaml.tmpl", size: 1616, mode: os.FileMode(420), modTime: time.Unix(1542788505, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcpGoogleOauthServiceAccountYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\x41\x6f\x9c\x40\x0c\x85\xef\xfc\x8a\x27\xb8\xb4\xd2\x86\x4d\x72\xa9\x44\x4f\x34\x49\x5b\xd4\x88\x95\xc2\xa6\x51\x8e\xde\xc1\x0b\x56\x61\x66\x3a\x33\x84\xac\xa2\xfc\xf7\x0a\xd8\xad\x1a\xf5\x18\xdf\xb0\x9f\xed\x0f\xcf\x4b\xde\x1d\x51\x82\x2b\x63\x0f\x4e\x9a\x36\xe0\xf2\xfc\xe2\x13\xbe\x19\xd3\x74\x8c\x42\xab\x34\x9a\xca\xb7\xa2\x58\x7b\xae\x31\xe8\x9a\x1d\x42\xcb\xc8\x2d\xa9\x96\x4f\x95\x15\x7e\xb2\xf3\x62\x34\x2e\xd3\x73\x7c\x98\x04\xf1\xb1\x14\x7f\xfc\x1c\x25\x38\x98\x01\x3d\x1d\xa0\x4d\xc0\xe0\x19\xa1\x15\x8f\xbd\x74\x0c\x7e\x56\x6c\x03\x44\x43\x99\xde\x76\x42\x5a\x31\x46\x09\xed\xbc\xe6\x38\x24\x8d\x12\x3c\x1e\x47\x98\x5d\x20\xd1\x20\x28\x63\x0f\x30\xfb\x7f\x75\xa0\x30\x03\x4f\xd1\x86\x60\x7d\xb6\x5e\x8f\xe3\x98\xd2\x4c\x9b\x1a\xd7\xac\xbb\x45\xe9\xd7\xb7\xc5\xd5\x4d\x59\xdd\x9c\x5d\xa6\xe7\x73\xcf\xbd\xee\xd8\x7b\x38\xfe\x3d\x88\xe3\x1a\xbb\x03\xc8\xda\x4e\x14\xed\x3a\x46\x47\x23\x8c\x03\x35\x8e\xb9\x46\x30\x13\xf0\xe8\x24\x88\x6e\x56\xf0\x66\x1f\x46\x72\x1c\x25\xa8\xc5\x07\x27\xbb\x21\xbc\xb9\xd6\x09\x4f\xfc\x1b\x81\xd1\x20\x8d\x38\xaf\x50\x54\x31\xbe\xe4\x55\x51\xad\xa2\x04\x0f\xc5\xf6\xfb\xe6\x7e\x8b\x87\xfc\xee\x2e\x2f\xb7\xc5\x4d\x85\xcd\x1d\xae\x36\xe5\x75\xb1\x2d\x36\x65\x85\xcd\x57\xe4\xe5\x23\x7e\x14\xe5\xf5\x0a\x2c\xa1\x65\x07\x7e\xb6\x6e\xe2\x37\x0e\x32\xdd\x91\xeb\xe9\x68\x15\xf3\x1b\x80\xbd\x59\x80\xbc\x65\x25\x7b\x51\xe8\x48\x37\x03\x35\x8c\xc6\x3c\xb1\xd3\xa2\x1b\x58\x76\xbd\xf8\xe9\x35\x3d\x48\xd7\x51\x82\x4e\x7a\x09\x14\xe6\xcc\x7f\x3f\xb5\x58\xa4\x62\xf7\x24\x8a\x41\x4a\x99\x41\x07\xff\x77\x53\xb3\x78\xc9\xd0\x10\x5a\xf4\xa4\xa9\x61\x37\x75\xbc\xdf\xb6\x64\xe5\xe8\xba\x0c\x4f\x17\xd1\x2f\xd1\x75\x76\xe2\xc8\x17\x8c\xa8\xe7\x40\x35\x05\xca\x22\x40\x53\xcf\x19\xe2\x05\xe8\x6c\x06\x8a\x8f\x69\x6f\x49\x71\x86\x97\x17\xa4\xe5\xe9\x13\xaf\xaf\xd1\x9f\x00\x00\x00\xff\xff\x1e\x04\xf0\xa6\x5d\x03\x00\x00")

func templatesGcpGoogleOauthServiceAccountYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcpGoogleOauthServiceAccountYamlTmpl,
		"templates/gcp/google-oauth-service-account.yaml.tmpl",
	)
}

func templatesGcpGoogleOauthServiceAccountYamlTmpl() (*asset, error) {
	bytes, err := templatesGcpGoogleOauthServiceAccountYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcp/google-oauth-service-account.yaml.tmpl", size: 861, mode: os.FileMode(420), modTime: time.Unix(1542788505, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcpNamespaceYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x53\xc1\x6e\xdb\x38\x14\xbc\xeb\x2b\x06\xd6\x65\x17\x70\xe4\x24\x97\x5d\x78\x4f\xde\x24\x6d\x85\x06\x32\x10\x39\x0d\x72\x7c\xa6\x9e\xa5\x87\x50\xa4\x4a\x52\x56\x8c\xc0\xff\x5e\x50\x91\xdb\x1a\x3d\x86\x47\xcd\x68\x66\x34\x1a\xa6\x1f\x3e\x49\x8a\x1b\xdb\x1d\x9c\xd4\x4d\xc0\xf5\xe5\xd5\x3f\xf8\x6c\x6d\xad\x19\xb9\x51\x59\x12\xe1\x7b\x51\x6c\x3c\x57\xe8\x4d\xc5\x0e\xa1\x61\xac\x3a\x52\x0d\x9f\x90\x39\xbe\xb1\xf3\x62\x0d\xae\xb3\x4b\xfc\x15\x09\xb3\x09\x9a\xfd\xfd\x5f\x92\xe2\x60\x7b\xb4\x74\x80\xb1\x01\xbd\x67\x84\x46\x3c\x76\xa2\x19\xfc\xaa\xb8\x0b\x10\x03\x65\xdb\x4e\x0b\x19\xc5\x18\x24\x34\xa3\xcd\x24\x92\x25\x29\x9e\x27\x09\xbb\x0d\x24\x06\x04\x65\xbb\x03\xec\xee\x77\x1e\x28\x8c\x81\xe3\x69\x42\xe8\xfc\x72\xb1\x18\x86\x21\xa3\x31\x6d\x66\x5d\xbd\xd0\xef\x4c\xbf\xb8\xcf\x6f\xee\x8a\xf2\xee\xe2\x3a\xbb\x1c\xdf\x79\x34\x9a\xbd\x87\xe3\xef\xbd\x38\xae\xb0\x3d\x80\xba\x4e\x8b\xa2\xad\x66\x68\x1a\x60\x1d\xa8\x76\xcc\x15\x82\x8d\x81\x07\x27\x41\x4c\x3d\x87\xb7\xbb\x30\x90\xe3\x24\x45\x25\x3e\x38\xd9\xf6\xe1\xac\xad\x53\x3c\xf1\x67\x04\x6b\x40\x06\xb3\x55\x89\xbc\x9c\xe1\xff\x55\x99\x97\xf3\x24\xc5\x53\xbe\xf9\xb2\x7e\xdc\xe0\x69\xf5\xf0\xb0\x2a\x36\xf9\x5d\x89\xf5\x03\x6e\xd6\xc5\x6d\xbe\xc9\xd7\x45\x89\xf5\x27\xac\x8a\x67\x7c\xcd\x8b\xdb\x39\x58\x42\xc3\x0e\xfc\xda\xb9\x98\xdf\x3a\x48\xec\x91\xab\x58\x5a\xc9\x7c\x16\x60\x67\xdf\x03\xf9\x8e\x95\xec\x44\x41\x93\xa9\x7b\xaa\x19\xb5\xdd\xb3\x33\x62\x6a\x74\xec\x5a\xf1\xf1\x6f\x7a\x90\xa9\x92\x14\x5a\x5a\x09\x14\xc6\x27\x7f\x7c\xd4\xfb\x44\xa6\xc9\xac\x57\x7d\x68\xd0\x92\xa1\x9a\x1d\x0c\xb5\xec\x3b\x52\x9c\x9d\xe3\x8e\xbd\xed\x9d\x62\x0f\xdf\xd8\x5e\x57\xd8\xc6\xea\x94\x63\x8a\xad\x90\xa9\x26\x85\x2a\xb6\x3c\x4e\xe5\x97\x52\x74\xfb\xf8\xe4\xa9\x93\x69\xb1\x4b\xec\xaf\x92\x17\x31\xd5\x12\xc5\xc9\x24\x69\x39\x50\x45\x81\x96\x09\x46\xeb\x25\xde\xde\x90\xfd\xc4\x71\x3c\x26\x00\x19\x63\xa7\x56\x22\x0f\x48\xe1\x58\x59\x57\xc1\x2b\xec\xa7\xfb\x20\x66\x67\x5d\x3b\xb2\x46\x8e\x67\xb7\x17\xc5\x8a\x02\x69\x5b\x67\x2f\xff\xfa\x4c\xec\xc2\xab\x0b\x31\x3e\x90\xd6\x17\xfb\x53\xac\x59\xb4\x3c\x5d\xab\xe3\x71\x96\xfc\x08\x00\x00\xff\xff\xa6\x03\xd9\x68\xea\x03\x00\x00")

func templatesGcpNamespaceYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcpNamespaceYamlTmpl,
		"templates/gcp/namespace.yaml.tmpl",
	)
}

func templatesGcpNamespaceYamlTmpl() (*asset, error) {
	bytes, err := templatesGcpNamespaceYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcp/namespace.yaml.tmpl", size: 1002, mode: os.FileMode(420), modTime: time.Unix(1542788505, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcpServiceAccountSecretYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x94\x4f\x73\xdb\x36\x10\xc5\xef\xfc\x14\x6f\xa4\x4b\x3b\x63\x49\x8e\x9c\xa4\x13\x35\xc9\x8c\xe2\xb8\x8e\x1c\x0d\xd5\x91\x1c\xdb\x6a\xa7\x07\x10\x5c\x91\xa8\x40\x2c\x03\x80\x62\x98\x3f\xdf\xbd\x03\x92\x4e\xac\xa6\x3d\x85\x27\x5b\xfb\x76\xf1\xdb\xb7\x0b\x0c\x7f\xf8\x8b\x86\x38\xe7\xb2\xb1\x2a\xcb\x3d\xa6\xa7\x8f\x7e\xc1\x25\x73\xa6\x09\x0b\x23\xc7\x51\x08\x2f\x95\x24\xe3\x28\x45\x65\x52\xb2\xf0\x39\x61\x5e\x0a\x99\xd3\x7d\xe4\x04\x37\x64\x9d\x62\x83\xe9\xf8\x14\x3f\x05\xc1\xa0\x0f\x0d\x7e\xfe\x35\x1a\xa2\xe1\x0a\x85\x68\x60\xd8\xa3\x72\x04\x9f\x2b\x87\x9d\xd2\x04\xfa\x20\xa9\xf4\x50\x06\x92\x8b\x52\x2b\x61\x24\xa1\x56\x3e\x6f\x8f\xe9\x8b\x8c\xa3\x21\xb6\x7d\x09\x4e\xbc\x50\x06\x02\x92\xcb\x06\xbc\x7b\xa8\x83\xf0\x2d\x70\xf8\x72\xef\x4b\x37\x9b\x4c\xea\xba\x1e\x8b\x96\x76\xcc\x36\x9b\xe8\x4e\xe9\x26\xcb\xc5\xf9\x45\xbc\xb9\x18\x4d\xc7\xa7\x6d\xce\x3b\xa3\xc9\x39\x58\x7a\x5f\x29\x4b\x29\x92\x06\xa2\x2c\xb5\x92\x22\xd1\x04\x2d\x6a\xb0\x85\xc8\x2c\x51\x0a\xcf\x01\xb8\xb6\xca\x2b\x93\x9d\xc0\xf1\xce\xd7\xc2\x52\x34\x44\xaa\x9c\xb7\x2a\xa9\xfc\x91\x5b\xf7\x78\xca\x1d\x09\xd8\x40\x18\x0c\xe6\x1b\x2c\x36\x03\xbc\x9a\x6f\x16\x9b\x93\x68\x88\xdb\xc5\xf5\x9b\xd5\xbb\x6b\xdc\xce\xd7\xeb\x79\x7c\xbd\xb8\xd8\x60\xb5\xc6\xf9\x2a\x7e\xbd\xb8\x5e\xac\xe2\x0d\x56\xbf\x61\x1e\x6f\xf1\x76\x11\xbf\x3e\x01\x29\x9f\x93\x05\x7d\x28\x6d\xe0\x67\x0b\x15\x7c\xa4\x34\x98\xb6\x21\x3a\x02\xd8\x71\x07\xe4\x4a\x92\x6a\xa7\x24\xb4\x30\x59\x25\x32\x42\xc6\x07\xb2\x46\x99\x0c\x25\xd9\x42\xb9\x30\x4d\x07\x61\xd2\x68\x08\xad\x0a\xe5\x85\x6f\x7f\xf9\xae\xa9\x6e\x45\x36\x24\x2d\x79\x38\xcf\x36\xd4\xd0\x6c\xb2\x91\x56\x07\x4a\x71\x79\xfe\x3b\x1c\xd9\x83\x92\x04\x21\x25\x57\xc6\xe3\x6f\xc7\x06\x7b\x6a\xc6\xb8\xce\x95\x0b\x27\x7c\xd3\xef\xa9\x41\xad\xb4\x46\x42\x90\x6c\xbc\x32\x95\xd0\xba\x81\xb7\xc2\xb8\x1d\xdb\xa2\xf3\x5f\xc0\xe5\x6c\x7d\x97\x14\x0d\x91\x90\xb0\x01\x8c\xf7\x64\xda\xd9\x19\x6e\x7d\x49\x94\x11\xb6\x39\x09\x9d\xb4\x74\x94\x86\xd1\xb5\x1b\xea\x5a\xe6\x58\x14\x34\x88\x86\xed\xce\x7d\x1f\x71\xa5\x90\x34\x08\x9c\x74\xdf\xc5\x48\x0a\x2f\x34\x67\x1d\x65\xe5\xc2\xd8\xdb\x7d\x7e\x00\x74\x8c\x13\x70\x2b\x9f\x93\xf1\x4a\x0a\xff\x60\xbd\x83\x37\x89\xe5\x3d\xd9\x30\xac\x85\x01\xdb\xd6\x5d\x46\x22\x1c\x3d\x7d\x0c\x32\x92\x53\x42\x58\x19\x93\x39\x94\x96\x4b\xb2\xba\xe9\xef\x50\x98\xa7\xd6\x5c\x2b\x93\x45\xc3\x70\x7f\x0a\x61\xd2\x59\x7f\x03\x48\xe6\x8c\x91\xc1\xf3\x2e\x79\xe4\x79\xd4\x55\x7b\x89\xcf\x7d\xf9\x56\xf9\xaa\xfd\xb3\x8f\xa5\xe8\x5a\x47\x2a\xbc\x08\x65\xf6\xd4\xcc\xf0\xfc\xff\xe6\xf7\x32\x48\x9c\xe4\x92\xdc\x0c\x7f\x0e\x1e\x5e\xb9\xac\x7d\x43\x44\xa9\xdc\x58\x72\x31\x09\xfd\x4f\xa4\xe6\x2a\x1d\x95\x5a\xf8\x30\xc7\xc1\x5f\x6d\xf6\x57\xab\x67\xc8\x64\x39\x72\x07\x39\xea\x8f\x19\x75\xb1\x63\x55\x3b\x90\xd9\xbf\x67\x11\x3a\xf9\xf1\x87\x50\x94\xaa\x7f\xc7\x66\x38\x3c\x8a\xf6\xca\xa4\xb3\x7e\xb3\xa3\x82\xbc\x08\xa6\xcc\x22\xc0\xb4\xb4\x1c\x7a\xea\xff\xeb\xa9\x3e\x7d\xc2\xf8\x2b\x24\xbe\x7c\x89\x7c\x53\xd2\x0c\xab\x52\xbc\xaf\x28\xba\x4f\x6f\x3d\x0d\xd2\xcd\x41\xce\xbb\x56\xdf\x52\x13\xe4\xdf\xcc\xbc\x6d\xae\x38\x7d\xb3\xae\xe5\x47\x3e\x2c\xcf\xd2\xb3\xb4\x79\x62\x92\xe9\x33\x93\x5c\xde\xe4\xf2\x52\x7f\x5c\x16\xf1\x21\xd9\x3c\xcb\xd3\xbb\x35\x2f\xa7\xb1\x4b\xce\x6e\xf6\xcb\xbb\x57\x6e\x7b\xb7\x2e\x92\xb3\x2b\xbf\xd0\xa7\x2f\xa2\x63\x77\xff\x98\xc6\xf5\xf2\x2e\x9e\x6e\x9b\x47\xf9\x76\x1a\x1f\xd2\xdb\x27\xa7\xcb\xbb\x58\x6f\xcf\xae\x74\x3a\x7f\x71\x2c\xff\xcf\x86\x3e\x23\x79\xfa\x98\x8c\x0c\xa8\xff\x04\x00\x00\xff\xff\x12\xd0\x65\x5b\x78\x06\x00\x00")

func templatesGcpServiceAccountSecretYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcpServiceAccountSecretYamlTmpl,
		"templates/gcp/service-account-secret.yaml.tmpl",
	)
}

func templatesGcpServiceAccountSecretYamlTmpl() (*asset, error) {
	bytes, err := templatesGcpServiceAccountSecretYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcp/service-account-secret.yaml.tmpl", size: 1656, mode: os.FileMode(420), modTime: time.Unix(1542788505, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcpDeprecatedGoogleOauthDeploymentYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\x41\x73\xdb\x36\x13\xbd\xf3\x57\xbc\x91\x0e\xdf\xd7\x19\x53\x92\x9d\x4c\xdb\x61\x4f\xaa\xed\xa6\x6a\x5d\xc9\x63\x29\xcd\xe4\xb8\x02\x57\x24\xc6\x20\xc0\x2e\x40\xcb\xfc\xf7\x1d\x50\x94\x4c\x26\x97\x74\x82\x8b\x2d\xec\xdb\xb7\x0f\x0f\x0f\x9c\x7e\xf7\x4a\xa6\xb8\x75\x75\x2b\xba\x28\x03\x6e\x16\xd7\x3f\xe1\x83\x73\x85\x61\xac\xac\x9a\x25\xb1\xfc\xa0\x15\x5b\xcf\x39\x1a\x9b\xb3\x20\x94\x8c\x65\x4d\xaa\xe4\x73\xe5\x0a\x7f\xb3\x78\xed\x2c\x6e\x66\x0b\xfc\x3f\x02\x26\x7d\x69\xf2\xc3\x2f\xc9\x14\xad\x6b\x50\x51\x0b\xeb\x02\x1a\xcf\x08\xa5\xf6\x38\x68\xc3\xe0\x57\xc5\x75\x80\xb6\x50\xae\xaa\x8d\x26\xab\x18\x47\x1d\xca\x6e\x4c\x4f\x32\x4b\xa6\xf8\xdc\x53\xb8\x7d\x20\x6d\x41\x50\xae\x6e\xe1\x0e\x43\x1c\x28\x74\x82\xe3\x2a\x43\xa8\x7d\x36\x9f\x1f\x8f\xc7\x19\x75\x6a\x67\x4e\x8a\xb9\x39\x21\xfd\xfc\x61\x75\x7b\xbf\xde\xde\xa7\x37\xb3\x45\xd7\xf3\xd1\x1a\xf6\x1e\xc2\xff\x34\x5a\x38\xc7\xbe\x05\xd5\xb5\xd1\x8a\xf6\x86\x61\xe8\x08\x27\xa0\x42\x98\x73\x04\x17\x05\x1f\x45\x07\x6d\x8b\x2b\x78\x77\x08\x47\x12\x4e\xa6\xc8\xb5\x0f\xa2\xf7\x4d\x18\xb9\x75\x96\xa7\xfd\x08\xe0\x2c\xc8\x62\xb2\xdc\x62\xb5\x9d\xe0\xd7\xe5\x76\xb5\xbd\x4a\xa6\xf8\xb4\xda\xfd\xbe\xf9\xb8\xc3\xa7\xe5\xd3\xd3\x72\xbd\x5b\xdd\x6f\xb1\x79\xc2\xed\x66\x7d\xb7\xda\xad\x36\xeb\x2d\x36\xbf\x61\xb9\xfe\x8c\x3f\x57\xeb\xbb\x2b\xb0\x0e\x25\x0b\xf8\xb5\x96\xa8\xdf\x09\x74\xf4\x91\xf3\x68\xda\x96\x79\x24\xe0\xe0\x4e\x82\x7c\xcd\x4a\x1f\xb4\x82\x21\x5b\x34\x54\x30\x0a\xf7\xc2\x62\xb5\x2d\x50\xb3\x54\xda\xc7\xdb\xf4\x20\x9b\x27\x53\x18\x5d\xe9\x40\xa1\xdb\xf9\xea\x50\xa7\x88\xdc\x71\x6d\x5c\x5b\xb1\x0d\xdd\x8c\x53\x82\xfe\xe7\xe1\xa8\x09\x25\x2a\x97\x37\x86\x67\xd8\x09\x59\x7f\x70\x52\x79\x10\x3c\xcb\x8b\x56\x0c\x52\xca\x35\x36\xf8\x38\xc8\xd9\x22\x35\xfa\x85\x73\xfc\xb1\xdd\xac\xf1\xcc\x6d\xf4\x9a\xe0\x4b\x27\xa1\xaf\xec\x99\x24\x4a\x70\xcf\x6c\x63\x35\x90\x79\xee\xfe\x96\x8c\x0f\xb7\x8f\xc9\x14\x7b\x71\xcf\x2c\x33\xec\x62\x0e\x53\x3b\x01\x49\x11\xbd\x8f\x08\x4b\x15\xfb\x9a\x14\xc7\x16\xcf\x24\xaa\x7c\x73\x85\x95\x70\x48\xa6\x50\xce\xc6\x90\x45\x37\xe2\xfe\x40\xd6\x17\xa2\x2f\x32\x4f\xc3\x72\x3e\x50\x63\x22\xc3\xdb\x18\xed\x31\x29\x3a\x3b\xd2\xce\x8c\x49\x84\x6a\x8f\xbd\xb6\x24\x2d\x82\x68\x3e\x29\x0b\x67\x73\x3a\xa7\x93\x69\x17\x0f\x63\x7a\x55\x3e\x26\xae\x7b\x36\x17\xea\xce\xf9\xef\x7f\xfe\xcf\xda\xe6\xd9\xe0\x02\x13\xaa\x75\xff\x9c\x33\xf0\x6b\x60\xdb\x65\x61\xfe\x72\xbd\xe7\x40\xd7\x49\xc5\x81\x72\x0a\x94\x25\xe8\xb4\x64\x18\x1e\xaf\xdf\xec\x04\x66\x67\xbb\x52\x45\x81\x8c\x2b\x12\xc0\xd0\x9e\x8d\x8f\xbd\x88\xef\xeb\x2b\x48\x3a\x22\x8b\x39\x8d\x58\xe1\xee\x25\xfa\x0c\xd7\x09\xe0\xd9\xb0\x0a\x4e\x4e\x2c\x15\x05\x55\x3e\x0c\x68\xbf\x85\x18\x08\x5c\xd5\x86\x02\xf7\x24\x83\x43\xc5\x65\x46\x7c\xdf\xc6\x08\x9c\xe5\x76\xff\x9f\xc0\xcb\x53\x50\xd6\x9d\x51\x93\x18\x2c\x71\xc6\xb0\xa4\x15\x59\x2a\x58\x26\x3d\xbc\x8f\x1c\xcb\x65\x68\xda\xbb\x7b\x9e\xf6\x36\x26\x2e\x5d\x51\x11\xad\x57\x32\xd3\x6e\x5e\xa8\x3a\xed\x07\xfa\xf9\xa8\x21\x8b\x67\xf4\x61\xdc\xf7\xd8\x18\xf3\xe8\x8c\x56\x6d\x86\xa5\x39\x52\xeb\x2f\x75\x61\xef\x1a\x51\x3c\x38\x3b\xba\x8f\x22\xfb\x30\xda\x03\x54\xdd\x64\xb8\x5e\x2c\xaa\xd1\x6e\xc5\x95\x93\x36\xc3\xcd\xe2\x2f\x3d\x28\x74\xdf\x90\xff\x44\xf0\x6e\x48\x40\x52\x0c\x9a\x53\xa4\x76\xf0\x63\xf2\xc5\xc5\x4c\x86\xc0\x97\x21\xf0\xc7\x51\x89\x8c\x77\xc6\x15\xc1\xf9\x90\xb3\xc8\xa5\x54\x3b\x09\xa3\x69\x97\xcb\x79\x74\x12\x32\xfc\xfc\xfe\xfd\xbb\xe4\xdf\x00\x00\x00\xff\xff\x2a\xdf\x9e\x4c\x79\x07\x00\x00")

func templatesGcpDeprecatedGoogleOauthDeploymentYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcpDeprecatedGoogleOauthDeploymentYamlTmpl,
		"templates/gcp-deprecated/google-oauth-deployment.yaml.tmpl",
	)
}

func templatesGcpDeprecatedGoogleOauthDeploymentYamlTmpl() (*asset, error) {
	bytes, err := templatesGcpDeprecatedGoogleOauthDeploymentYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcp-deprecated/google-oauth-deployment.yaml.tmpl", size: 1913, mode: os.FileMode(420), modTime: time.Unix(1542788448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcpDeprecatedServiceAccountSecretYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\xc1\x72\xdb\x36\x10\xbd\xf3\x2b\xde\x48\x97\x76\xc6\x92\x6c\xb9\x69\x27\x6a\x92\x19\xd9\x71\x1d\x39\x1a\xaa\x23\x3a\xb6\x94\x4e\x0f\x20\xb0\x22\x61\x81\x00\x03\x80\x62\x98\x34\xff\xde\x01\x49\x37\x56\x33\x39\x05\x27\x89\xfb\x76\xf1\xf6\xbd\x5d\x0c\x7f\xf8\x44\x43\x5c\x9a\xb2\xb1\x32\xcb\x3d\xa6\xa7\x67\xbf\xe1\xda\x98\x4c\x11\x16\x9a\x8f\xa3\x10\x5e\x4a\x4e\xda\x91\x40\xa5\x05\x59\xf8\x9c\x30\x2f\x19\xcf\xe9\x31\x72\x82\x3b\xb2\x4e\x1a\x8d\xe9\xf8\x14\x3f\x05\xc0\xa0\x0f\x0d\x7e\xfe\x3d\x1a\xa2\x31\x15\x0a\xd6\x40\x1b\x8f\xca\x11\x7c\x2e\x1d\x76\x52\x11\xe8\x23\xa7\xd2\x43\x6a\x70\x53\x94\x4a\x32\xcd\x09\xb5\xf4\x79\x7b\x4d\x5f\x64\x1c\x0d\xb1\xed\x4b\x98\xd4\x33\xa9\xc1\xc0\x4d\xd9\xc0\xec\x9e\xe2\xc0\x7c\x4b\x38\x9c\xdc\xfb\xd2\xcd\x26\x93\xba\xae\xc7\xac\x65\x3b\x36\x36\x9b\xa8\x0e\xe9\x26\xcb\xc5\xe5\x55\x9c\x5c\x8d\xa6\xe3\xd3\x36\xe7\x9d\x56\xe4\x1c\x2c\x7d\xa8\xa4\x25\x81\xb4\x01\x2b\x4b\x25\x39\x4b\x15\x41\xb1\x1a\xc6\x82\x65\x96\x48\xc0\x9b\x40\xb8\xb6\xd2\x4b\x9d\x9d\xc0\x99\x9d\xaf\x99\xa5\x68\x08\x21\x9d\xb7\x32\xad\xfc\x91\x5a\x8f\xf4\xa4\x3b\x02\x18\x0d\xa6\x31\x98\x27\x58\x24\x03\x5c\xcc\x93\x45\x72\x12\x0d\x71\xbf\xb8\x7d\xb3\x7a\x77\x8b\xfb\xf9\x7a\x3d\x8f\x6f\x17\x57\x09\x56\x6b\x5c\xae\xe2\xd7\x8b\xdb\xc5\x2a\x4e\xb0\xfa\x03\xf3\x78\x8b\xb7\x8b\xf8\xf5\x09\x48\xfa\x9c\x2c\xe8\x63\x69\x03\x7f\x63\x21\x83\x8e\x24\x82\x68\x09\xd1\x11\x81\x9d\xe9\x08\xb9\x92\xb8\xdc\x49\x0e\xc5\x74\x56\xb1\x8c\x90\x99\x03\x59\x2d\x75\x86\x92\x6c\x21\x5d\x70\xd3\x81\x69\x11\x0d\xa1\x64\x21\x3d\xf3\xed\x97\x6f\x9a\xea\x46\x24\x21\x6e\xc9\xc3\x79\x63\x43\x0d\x65\x74\x36\x52\xf2\x40\x02\xd7\x97\x7f\xc2\x91\x3d\x48\x4e\x60\x9c\x9b\x4a\x7b\x3c\x38\xa3\xb1\xa7\x66\x8c\xdb\x5c\xba\x70\xc3\x57\xfc\x9e\x1a\xd4\x52\x29\xa4\x04\x6e\xb4\x97\xba\x62\x4a\x35\xf0\x96\x69\xb7\x33\xb6\xe8\xf4\x67\x70\xb9\xb1\xbe\x4b\x8a\x86\x48\x89\xd9\x40\xcc\xec\x49\xb7\xde\x69\xd3\xea\x92\x4a\xcd\x6c\x73\x12\x3a\x69\xd9\x91\x08\xd6\xb5\x13\xea\x5a\xce\x31\x2b\x68\x10\x0d\xdb\x99\xfb\x36\xe2\x4a\xc6\x69\x10\x78\xd2\x63\x17\x23\xce\x3c\x53\x26\xeb\x58\x56\x2e\xd8\xde\xce\xf3\x13\x42\xc7\x74\x02\xdd\xca\xe7\xa4\xbd\xe4\xcc\x3f\x19\xef\xa0\x4d\x6a\xcd\x9e\x6c\x30\x6b\xa1\x61\x6c\xab\xae\x41\xca\x1c\xfd\xfa\x0b\x48\x73\x23\x08\x61\x64\x74\xe6\x50\x5a\x53\x92\x55\x4d\xbf\x43\xc1\x4f\xa5\x4c\x2d\x75\x16\x0d\xc3\xfe\x14\x4c\x8b\x59\xbf\x01\xc4\x73\x83\x91\xc6\x8b\x2e\x79\xe4\xcd\xa8\xab\xf6\x0a\xff\x3c\x96\x6f\xa1\x17\xed\xef\x3e\x28\xd0\xf5\x0e\xc1\x3c\x0b\x75\xf6\xd4\xcc\xf0\xe2\x7b\x06\xbe\x0a\x10\xc7\x4d\x49\x6e\x86\xbf\x06\x4f\x77\x2e\x6b\x1f\x11\x56\x4a\x37\xe6\xa6\x98\x04\x01\x26\x5c\x99\x4a\x8c\x4a\xc5\x7c\x30\x72\xf0\x77\x9b\xfd\x9f\xd6\x33\x64\xbc\x1c\xb9\x03\x1f\xf5\xd7\x8c\xba\xd8\x31\xaa\x75\x64\xf6\x7f\x33\x42\x27\x3f\xfe\x12\xb2\x52\xf6\x0f\xd9\x0c\x87\xb3\x68\x2f\xb5\x98\xf5\xa3\x1d\x15\xe4\x59\x10\x65\x16\x01\xba\x65\x6b\x42\x4f\xfd\xbf\xef\xb0\xf2\x4d\x49\x33\xac\x4a\xf6\xa1\xa2\xe8\x31\xbb\x95\xf4\xf3\x67\x8c\x93\x03\x9f\x77\x9d\xbe\xa5\x06\x5f\xbe\x44\x5f\xb5\xbc\x6f\x6e\x8c\x78\xb3\xae\xf9\x27\x73\x58\x9e\x8b\x73\xd1\x3c\xd3\xe9\xf4\xb9\x4e\xaf\xef\x72\x7e\xad\x3e\x2d\x8b\xf8\x90\x26\xcf\x73\xb1\x59\x9b\xe5\x34\x76\xe9\xf9\xdd\x7e\xb9\xb9\x70\xdb\xcd\xba\x48\xcf\x6f\xfc\x42\x9d\xbe\x8c\x8e\xc5\x7d\x3f\x8d\xeb\xe5\x26\x9e\x6e\x9b\xb3\x7c\x3b\x8d\x0f\xe2\xfe\xd9\xe9\x72\x13\xab\xed\xf9\x8d\x12\xf3\x97\xc7\xf0\xbe\x1f\x3e\xbd\x6b\x44\xa1\x1e\xde\x27\x67\x0f\xdb\xcd\x3a\x4f\xaf\x9f\xeb\xe8\xdf\x00\x00\x00\xff\xff\xc4\x9a\x94\x48\x73\x06\x00\x00")

func templatesGcpDeprecatedServiceAccountSecretYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcpDeprecatedServiceAccountSecretYamlTmpl,
		"templates/gcp-deprecated/service-account-secret.yaml.tmpl",
	)
}

func templatesGcpDeprecatedServiceAccountSecretYamlTmpl() (*asset, error) {
	bytes, err := templatesGcpDeprecatedServiceAccountSecretYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcp-deprecated/service-account-secret.yaml.tmpl", size: 1651, mode: os.FileMode(420), modTime: time.Unix(1542788448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/sc/api-registration.yaml.tmpl": templatesScApiRegistrationYamlTmpl,
	"templates/sc/apiserver-deployment.yaml.tmpl": templatesScApiserverDeploymentYamlTmpl,
	"templates/sc/ca_config.json": templatesScCa_configJson,
	"templates/sc/ca_csr.json.tmpl": templatesScCa_csrJsonTmpl,
	"templates/sc/controller-manager-deployment.yaml.tmpl": templatesScControllerManagerDeploymentYamlTmpl,
	"templates/sc/etcd-cluster-with-backup.yaml.tmpl": templatesScEtcdClusterWithBackupYamlTmpl,
	"templates/sc/etcd-operator-deployment.yaml.tmpl": templatesScEtcdOperatorDeploymentYamlTmpl,
	"templates/sc/etcd-operator-rbac-binding.yaml.tmpl": templatesScEtcdOperatorRbacBindingYamlTmpl,
	"templates/sc/etcd-operator-rbac.yaml.tmpl": templatesScEtcdOperatorRbacYamlTmpl,
	"templates/sc/etcd-operator-service-account.yaml.tmpl": templatesScEtcdOperatorServiceAccountYamlTmpl,
	"templates/sc/etcd-svc.yaml.tmpl": templatesScEtcdSvcYamlTmpl,
	"templates/sc/etcd.yaml.tmpl": templatesScEtcdYamlTmpl,
	"templates/sc/gencert_config.json.tmpl": templatesScGencert_configJsonTmpl,
	"templates/sc/namespace.yaml.tmpl": templatesScNamespaceYamlTmpl,
	"templates/sc/rbac.yaml.tmpl": templatesScRbacYamlTmpl,
	"templates/sc/service-accounts.yaml.tmpl": templatesScServiceAccountsYamlTmpl,
	"templates/sc/service.yaml.tmpl": templatesScServiceYamlTmpl,
	"templates/sc/tls-cert-secret.yaml.tmpl": templatesScTlsCertSecretYamlTmpl,
	"templates/gcp/gcp-broker.yaml.tmpl": templatesGcpGcpBrokerYamlTmpl,
	"templates/gcp/google-oauth-deployment.yaml.tmpl": templatesGcpGoogleOauthDeploymentYamlTmpl,
	"templates/gcp/google-oauth-rbac.yaml.tmpl": templatesGcpGoogleOauthRbacYamlTmpl,
	"templates/gcp/google-oauth-service-account.yaml.tmpl": templatesGcpGoogleOauthServiceAccountYamlTmpl,
	"templates/gcp/namespace.yaml.tmpl": templatesGcpNamespaceYamlTmpl,
	"templates/gcp/service-account-secret.yaml.tmpl": templatesGcpServiceAccountSecretYamlTmpl,
	"templates/gcp-deprecated/google-oauth-deployment.yaml.tmpl": templatesGcpDeprecatedGoogleOauthDeploymentYamlTmpl,
	"templates/gcp-deprecated/service-account-secret.yaml.tmpl": templatesGcpDeprecatedServiceAccountSecretYamlTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"gcp": &bintree{nil, map[string]*bintree{
			"gcp-broker.yaml.tmpl": &bintree{templatesGcpGcpBrokerYamlTmpl, map[string]*bintree{}},
			"google-oauth-deployment.yaml.tmpl": &bintree{templatesGcpGoogleOauthDeploymentYamlTmpl, map[string]*bintree{}},
			"google-oauth-rbac.yaml.tmpl": &bintree{templatesGcpGoogleOauthRbacYamlTmpl, map[string]*bintree{}},
			"google-oauth-service-account.yaml.tmpl": &bintree{templatesGcpGoogleOauthServiceAccountYamlTmpl, map[string]*bintree{}},
			"namespace.yaml.tmpl": &bintree{templatesGcpNamespaceYamlTmpl, map[string]*bintree{}},
			"service-account-secret.yaml.tmpl": &bintree{templatesGcpServiceAccountSecretYamlTmpl, map[string]*bintree{}},
		}},
		"gcp-deprecated": &bintree{nil, map[string]*bintree{
			"google-oauth-deployment.yaml.tmpl": &bintree{templatesGcpDeprecatedGoogleOauthDeploymentYamlTmpl, map[string]*bintree{}},
			"service-account-secret.yaml.tmpl": &bintree{templatesGcpDeprecatedServiceAccountSecretYamlTmpl, map[string]*bintree{}},
		}},
		"sc": &bintree{nil, map[string]*bintree{
			"api-registration.yaml.tmpl": &bintree{templatesScApiRegistrationYamlTmpl, map[string]*bintree{}},
			"apiserver-deployment.yaml.tmpl": &bintree{templatesScApiserverDeploymentYamlTmpl, map[string]*bintree{}},
			"ca_config.json": &bintree{templatesScCa_configJson, map[string]*bintree{}},
			"ca_csr.json.tmpl": &bintree{templatesScCa_csrJsonTmpl, map[string]*bintree{}},
			"controller-manager-deployment.yaml.tmpl": &bintree{templatesScControllerManagerDeploymentYamlTmpl, map[string]*bintree{}},
			"etcd-cluster-with-backup.yaml.tmpl": &bintree{templatesScEtcdClusterWithBackupYamlTmpl, map[string]*bintree{}},
			"etcd-operator-deployment.yaml.tmpl": &bintree{templatesScEtcdOperatorDeploymentYamlTmpl, map[string]*bintree{}},
			"etcd-operator-rbac-binding.yaml.tmpl": &bintree{templatesScEtcdOperatorRbacBindingYamlTmpl, map[string]*bintree{}},
			"etcd-operator-rbac.yaml.tmpl": &bintree{templatesScEtcdOperatorRbacYamlTmpl, map[string]*bintree{}},
			"etcd-operator-service-account.yaml.tmpl": &bintree{templatesScEtcdOperatorServiceAccountYamlTmpl, map[string]*bintree{}},
			"etcd-svc.yaml.tmpl": &bintree{templatesScEtcdSvcYamlTmpl, map[string]*bintree{}},
			"etcd.yaml.tmpl": &bintree{templatesScEtcdYamlTmpl, map[string]*bintree{}},
			"gencert_config.json.tmpl": &bintree{templatesScGencert_configJsonTmpl, map[string]*bintree{}},
			"namespace.yaml.tmpl": &bintree{templatesScNamespaceYamlTmpl, map[string]*bintree{}},
			"rbac.yaml.tmpl": &bintree{templatesScRbacYamlTmpl, map[string]*bintree{}},
			"service-accounts.yaml.tmpl": &bintree{templatesScServiceAccountsYamlTmpl, map[string]*bintree{}},
			"service.yaml.tmpl": &bintree{templatesScServiceYamlTmpl, map[string]*bintree{}},
			"tls-cert-secret.yaml.tmpl": &bintree{templatesScTlsCertSecretYamlTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

